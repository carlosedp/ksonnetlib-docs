<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authorizations on ksonnet lib API Documentation</title>
    <link>http://example.org/authorization/</link>
    <description>Recent content in Authorizations on ksonnet lib API Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Sep 2019 21:17:09 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/authorization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/new/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(nonResourceAttributes)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/mixinInstance/</guid>
      <description>mixinInstance(resourceAttributes)</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withExtra</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withExtra/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withExtra/</guid>
      <description>withExtra(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtra</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withExtra/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withExtra/</guid>
      <description>withExtra(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtra</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withExtra/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withExtra/</guid>
      <description>withExtra(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtra</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withExtra/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withExtra/</guid>
      <description>withExtra(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtraMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withExtraMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withExtraMixin/</guid>
      <description>withExtraMixin(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtraMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withExtraMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withExtraMixin/</guid>
      <description>withExtraMixin(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtraMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withExtraMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withExtraMixin/</guid>
      <description>withExtraMixin(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withExtraMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withExtraMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withExtraMixin/</guid>
      <description>withExtraMixin(extra) Extra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withGroup/</guid>
      <description>withGroup(group) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withGroup/</guid>
      <description>withGroup(group) Group is the API Group of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withGroup/</guid>
      <description>withGroup(group) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroupMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withGroupMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withGroupMixin/</guid>
      <description>withGroupMixin(group) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroupMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withGroupMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withGroupMixin/</guid>
      <description>withGroupMixin(group) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroups</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withGroups/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withGroups/</guid>
      <description>withGroups(groups) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroups</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withGroups/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withGroups/</guid>
      <description>withGroups(groups) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroupsMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withGroupsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withGroupsMixin/</guid>
      <description>withGroupsMixin(groups) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withGroupsMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withGroupsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withGroupsMixin/</guid>
      <description>withGroupsMixin(groups) Groups is the groups you&amp;rsquo;re testing for.</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withName/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withName/</guid>
      <description>withName(name) Name is the name of the resource being requested for a &amp;ldquo;get&amp;rdquo; or deleted for a &amp;ldquo;delete&amp;rdquo;. &amp;ldquo;&amp;rdquo; (empty) means all.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/spec/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/spec/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace to evaluate rules for. Required.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace to evaluate rules for. Required.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces &amp;ldquo;&amp;rdquo; (empty) is defaulted for LocalSubjectAccessReviews &amp;ldquo;&amp;rdquo; (empty) is empty for cluster-scoped resources &amp;ldquo;&amp;rdquo; (empty) means &amp;ldquo;all&amp;rdquo; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/withPath/</guid>
      <description>withPath(path) Path is the URL path of the request</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withResource</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withResource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withResource/</guid>
      <description>withResource(resource) Resource is one of the existing resource types. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withSubresource</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withSubresource/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withSubresource/</guid>
      <description>withSubresource(subresource) Subresource is one of the existing resource types. &amp;ldquo;&amp;rdquo; means none.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withUid/</guid>
      <description>withUid(uid) UID information about the requesting user.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withUid/</guid>
      <description>withUid(uid) UID information about the requesting user.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withUid/</guid>
      <description>withUid(uid) UID information about the requesting user.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withUid/</guid>
      <description>withUid(uid) UID information about the requesting user.</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/withUser/</guid>
      <description>withUser(user) User is the user you&amp;rsquo;re testing for. If you specify &amp;ldquo;User&amp;rdquo; but not &amp;ldquo;Groups&amp;rdquo;, then is it interpreted as &amp;ldquo;What if User were not a member of any groups</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/withUser/</guid>
      <description>withUser(user) User is the user you&amp;rsquo;re testing for. If you specify &amp;ldquo;User&amp;rdquo; but not &amp;ldquo;Groups&amp;rdquo;, then is it interpreted as &amp;ldquo;What if User were not a member of any groups</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/withUser/</guid>
      <description>withUser(user) User is the user you&amp;rsquo;re testing for. If you specify &amp;ldquo;User&amp;rdquo; but not &amp;ldquo;Group&amp;rdquo;, then is it interpreted as &amp;ldquo;What if User were not a member of any groups</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/withUser/</guid>
      <description>withUser(user) User is the user you&amp;rsquo;re testing for. If you specify &amp;ldquo;User&amp;rdquo; but not &amp;ldquo;Group&amp;rdquo;, then is it interpreted as &amp;ldquo;What if User were not a member of any groups</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is the standard HTTP verb</description>
    </item>
    
    <item>
      <title>withVerb</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withVerb/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withVerb/</guid>
      <description>withVerb(verb) Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>withVersion</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withVersion/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/withVersion/</guid>
      <description>withVersion(version) Version is the API Version of the Resource. &amp;ldquo;*&amp;rdquo; means all.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>nonResourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributes/</guid>
      <description>NonResourceAttributes describes information for a non-resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>resourceAttributes</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributes/</guid>
      <description>ResourceAuthorizationAttributes describes information for a resource access request</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated. spec.namespace must be equal to the namespace you made the request against. If empty, it is defaulted.</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated. user and groups must be empty</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/spec/</guid>
      <description>Spec holds information about the request being evaluated.</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated. spec.namespace must be equal to the namespace you made the request against. If empty, it is defaulted.</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated. user and groups must be empty</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/spec/</guid>
      <description>Spec holds information about the request being evaluated.</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/</guid>
      <description>Spec holds information about the request being evaluated</description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nonResourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/nonResourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourceAttributesType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributesType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/spec/resourceAttributesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/specType/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>localSubjectAccessReview</title>
      <link>http://example.org/authorization/localSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/localSubjectAccessReview/</guid>
      <description>LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace.  LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace.  </description>
    </item>
    
    <item>
      <title>localSubjectAccessReview</title>
      <link>http://example.org/authorization/v1/localSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/localSubjectAccessReview/</guid>
      <description>LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.</description>
    </item>
    
    <item>
      <title>localSubjectAccessReview</title>
      <link>http://example.org/authorization/v1beta1/localSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/localSubjectAccessReview/</guid>
      <description>LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.</description>
    </item>
    
    <item>
      <title>selfSubjectAccessReview</title>
      <link>http://example.org/authorization/selfSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/selfSubjectAccessReview/</guid>
      <description>SelfSubjectAccessReview checks whether or the current user can perform an action.  SelfSubjectAccessReview checks whether or the current user can perform an action.  </description>
    </item>
    
    <item>
      <title>selfSubjectAccessReview</title>
      <link>http://example.org/authorization/v1/selfSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectAccessReview/</guid>
      <description>SelfSubjectAccessReview checks whether or the current user can perform an action. Not filling in a spec.namespace means &amp;ldquo;in all namespaces&amp;rdquo;. Self is a special case, because users should always be able to check whether they can perform an action</description>
    </item>
    
    <item>
      <title>selfSubjectAccessReview</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectAccessReview/</guid>
      <description>SelfSubjectAccessReview checks whether or the current user can perform an action. Not filling in a spec.namespace means &amp;ldquo;in all namespaces&amp;rdquo;. Self is a special case, because users should always be able to check whether they can perform an action</description>
    </item>
    
    <item>
      <title>selfSubjectRulesReview</title>
      <link>http://example.org/authorization/selfSubjectRulesReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/selfSubjectRulesReview/</guid>
      <description>SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace.  SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace.  </description>
    </item>
    
    <item>
      <title>selfSubjectRulesReview</title>
      <link>http://example.org/authorization/v1/selfSubjectRulesReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/selfSubjectRulesReview/</guid>
      <description>SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server&amp;rsquo;s authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns.</description>
    </item>
    
    <item>
      <title>selfSubjectRulesReview</title>
      <link>http://example.org/authorization/v1beta1/selfSubjectRulesReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/selfSubjectRulesReview/</guid>
      <description>SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server&amp;rsquo;s authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns.</description>
    </item>
    
    <item>
      <title>subjectAccessReview</title>
      <link>http://example.org/authorization/subjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/subjectAccessReview/</guid>
      <description>SubjectAccessReview checks whether or not a user or group can perform an action.  SubjectAccessReview checks whether or not a user or group can perform an action.  </description>
    </item>
    
    <item>
      <title>subjectAccessReview</title>
      <link>http://example.org/authorization/v1/subjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1/subjectAccessReview/</guid>
      <description>SubjectAccessReview checks whether or not a user or group can perform an action.</description>
    </item>
    
    <item>
      <title>subjectAccessReview</title>
      <link>http://example.org/authorization/v1beta1/subjectAccessReview/</link>
      <pubDate>Mon, 30 Sep 2019 21:17:09 +0000</pubDate>
      
      <guid>http://example.org/authorization/v1beta1/subjectAccessReview/</guid>
      <description>SubjectAccessReview checks whether or not a user or group can perform an action.</description>
    </item>
    
  </channel>
</rss>