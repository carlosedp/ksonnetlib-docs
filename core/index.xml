<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cores on ksonnet lib API Documentation</title>
    <link>http://example.org/core/</link>
    <description>Recent content in Cores on ksonnet lib API Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Sep 2019 20:18:41 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/core/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/binding/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/configMap/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/new/</guid>
      <description>new(name=&amp;#39;&amp;#39;, data=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/endpoints/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/event/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/limitRange/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/namespace/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/new/</guid>
      <description>new(name=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/node/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/persistentVolume/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/pod/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/podTemplate/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/replicationController/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/resourceQuota/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/new/</guid>
      <description>new()</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/secret/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/new/</guid>
      <description>new(name=&amp;#39;&amp;#39;, data=&amp;#39;&amp;#39;, type=&amp;#39;Opaque&amp;#39;)</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/service/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/new/</guid>
      <description>new(name=&amp;#39;&amp;#39;, selector=&amp;#39;&amp;#39;, ports=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>new</title>
      <link>http://example.org/core/v1/serviceAccount/new/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/new/</guid>
      <description>new(name=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/binding/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/binding/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/binding/target/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/mixinInstance/</guid>
      <description>mixinInstance(target)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/configMap/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/configMap/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/endpoints/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/involvedObject/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/mixinInstance/</guid>
      <description>mixinInstance(involvedObject)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/related/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/mixinInstance/</guid>
      <description>mixinInstance(related)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/series/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/series/mixinInstance/</guid>
      <description>mixinInstance(series)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/event/source/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/source/mixinInstance/</guid>
      <description>mixinInstance(source)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/limitRange/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/limitRange/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/namespace/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/namespace/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/namespace/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/node/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/node/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/mixinInstance/</guid>
      <description>mixinInstance(configMap)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/node/spec/configSource/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/mixinInstance/</guid>
      <description>mixinInstance(configSource)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/node/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/mixinInstance/</guid>
      <description>mixinInstance(awsElasticBlockStore)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/mixinInstance/</guid>
      <description>mixinInstance(azureDisk)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/mixinInstance/</guid>
      <description>mixinInstance(azureFile)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/mixinInstance/</guid>
      <description>mixinInstance(cephfs)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/mixinInstance/</guid>
      <description>mixinInstance(cinder)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/mixinInstance/</guid>
      <description>mixinInstance(claimRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/mixinInstance/</guid>
      <description>mixinInstance(controllerPublishSecretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/mixinInstance/</guid>
      <description>mixinInstance(csi)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/mixinInstance/</guid>
      <description>mixinInstance(nodePublishSecretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/mixinInstance/</guid>
      <description>mixinInstance(nodeStageSecretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/mixinInstance/</guid>
      <description>mixinInstance(fc)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/mixinInstance/</guid>
      <description>mixinInstance(flexVolume)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flocker/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flocker/mixinInstance/</guid>
      <description>mixinInstance(flocker)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/mixinInstance/</guid>
      <description>mixinInstance(gcePersistentDisk)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/mixinInstance/</guid>
      <description>mixinInstance(glusterfs)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/hostPath/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/hostPath/mixinInstance/</guid>
      <description>mixinInstance(hostPath)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/mixinInstance/</guid>
      <description>mixinInstance(iscsi)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/localStorage/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/localStorage/mixinInstance/</guid>
      <description>mixinInstance(localStorage)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfs/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfs/mixinInstance/</guid>
      <description>mixinInstance(nfs)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/mixinInstance/</guid>
      <description>mixinInstance(nodeAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/mixinInstance/</guid>
      <description>mixinInstance(required)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/mixinInstance/</guid>
      <description>mixinInstance(photonPersistentDisk)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolume/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolume/mixinInstance/</guid>
      <description>mixinInstance(portworxVolume)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/mixinInstance/</guid>
      <description>mixinInstance(quobyte)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/mixinInstance/</guid>
      <description>mixinInstance(rbd)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/mixinInstance/</guid>
      <description>mixinInstance(scaleIo)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/mixinInstance/</guid>
      <description>mixinInstance(storageos)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/mixinInstance/</guid>
      <description>mixinInstance(secretRef)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/mixinInstance/</guid>
      <description>mixinInstance(vsphereVolume)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/mixinInstance/</guid>
      <description>mixinInstance(dataSource)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/mixinInstance/</guid>
      <description>mixinInstance(resources)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/mixinInstance/</guid>
      <description>mixinInstance(selector)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/affinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/mixinInstance/</guid>
      <description>mixinInstance(affinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/mixinInstance/</guid>
      <description>mixinInstance(nodeAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</guid>
      <description>mixinInstance(requiredDuringSchedulingIgnoredDuringExecution)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAntiAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/mixinInstance/</guid>
      <description>mixinInstance(dnsConfig)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/mixinInstance/</guid>
      <description>mixinInstance(securityContext)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/mixinInstance/</guid>
      <description>mixinInstance(seLinuxOptions)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/mixinInstance/</guid>
      <description>mixinInstance(template)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/mixinInstance/</guid>
      <description>mixinInstance(affinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/mixinInstance/</guid>
      <description>mixinInstance(nodeAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</guid>
      <description>mixinInstance(requiredDuringSchedulingIgnoredDuringExecution)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAntiAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/mixinInstance/</guid>
      <description>mixinInstance(dnsConfig)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/mixinInstance/</guid>
      <description>mixinInstance(securityContext)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/mixinInstance/</guid>
      <description>mixinInstance(seLinuxOptions)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/mixinInstance/</guid>
      <description>mixinInstance(template)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/mixinInstance/</guid>
      <description>mixinInstance(affinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/mixinInstance/</guid>
      <description>mixinInstance(nodeAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/mixinInstance/</guid>
      <description>mixinInstance(requiredDuringSchedulingIgnoredDuringExecution)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/mixinInstance/</guid>
      <description>mixinInstance(podAntiAffinity)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/mixinInstance/</guid>
      <description>mixinInstance(dnsConfig)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/mixinInstance/</guid>
      <description>mixinInstance(securityContext)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/mixinInstance/</guid>
      <description>mixinInstance(seLinuxOptions)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/resourceQuota/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelector/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelector/mixinInstance/</guid>
      <description>mixinInstance(scopeSelector)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/secret/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/secret/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/service/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/service/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/service/spec/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/mixinInstance/</guid>
      <description>mixinInstance(spec)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/mixinInstance/</guid>
      <description>mixinInstance(clientIp)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/mixinInstance/</guid>
      <description>mixinInstance(sessionAffinityConfig)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializers/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializers/mixinInstance/</guid>
      <description>mixinInstance(initializers)</description>
    </item>
    
    <item>
      <title>mixinInstance</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/mixinInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/mixinInstance/</guid>
      <description>mixinInstance(metadata)</description>
    </item>
    
    <item>
      <title>withAccessModes</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withAccessModes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withAccessModes/</guid>
      <description>withAccessModes(accessModes) AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes</description>
    </item>
    
    <item>
      <title>withAccessModes</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/withAccessModes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/withAccessModes/</guid>
      <description>withAccessModes(accessModes) AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1</description>
    </item>
    
    <item>
      <title>withAccessModesMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withAccessModesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withAccessModesMixin/</guid>
      <description>withAccessModesMixin(accessModes) AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes</description>
    </item>
    
    <item>
      <title>withAccessModesMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/withAccessModesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/withAccessModesMixin/</guid>
      <description>withAccessModesMixin(accessModes) AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1</description>
    </item>
    
    <item>
      <title>withAction</title>
      <link>http://example.org/core/v1/event/withAction/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withAction/</guid>
      <description>withAction(action) What action was taken/failed regarding to the Regarding object.</description>
    </item>
    
    <item>
      <title>withActiveDeadlineSeconds</title>
      <link>http://example.org/core/v1/pod/spec/withActiveDeadlineSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withActiveDeadlineSeconds/</guid>
      <description>withActiveDeadlineSeconds(activeDeadlineSeconds) Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.</description>
    </item>
    
    <item>
      <title>withActiveDeadlineSeconds</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withActiveDeadlineSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withActiveDeadlineSeconds/</guid>
      <description>withActiveDeadlineSeconds(activeDeadlineSeconds) Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.</description>
    </item>
    
    <item>
      <title>withActiveDeadlineSeconds</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withActiveDeadlineSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withActiveDeadlineSeconds/</guid>
      <description>withActiveDeadlineSeconds(activeDeadlineSeconds) Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/binding/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/configMap/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/endpoints/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/event/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/limitRange/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/namespace/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/node/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/pod/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/replicationController/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/secret/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/service/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotations</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withAnnotations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withAnnotations/</guid>
      <description>withAnnotations(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/binding/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/event/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/node/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/pod/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/secret/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/service/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withAnnotationsMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withAnnotationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withAnnotationsMixin/</guid>
      <description>withAnnotationsMixin(annotations) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations</description>
    </item>
    
    <item>
      <title>withApiGroup</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withApiGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withApiGroup/</guid>
      <description>withApiGroup(apiGroup) APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.</description>
    </item>
    
    <item>
      <title>withAutomountServiceAccountToken</title>
      <link>http://example.org/core/v1/pod/spec/withAutomountServiceAccountToken/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withAutomountServiceAccountToken/</guid>
      <description>withAutomountServiceAccountToken(automountServiceAccountToken) AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.</description>
    </item>
    
    <item>
      <title>withAutomountServiceAccountToken</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withAutomountServiceAccountToken/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withAutomountServiceAccountToken/</guid>
      <description>withAutomountServiceAccountToken(automountServiceAccountToken) AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.</description>
    </item>
    
    <item>
      <title>withAutomountServiceAccountToken</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withAutomountServiceAccountToken/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withAutomountServiceAccountToken/</guid>
      <description>withAutomountServiceAccountToken(automountServiceAccountToken) AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.</description>
    </item>
    
    <item>
      <title>withAutomountServiceAccountToken</title>
      <link>http://example.org/core/v1/serviceAccount/withAutomountServiceAccountToken/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/withAutomountServiceAccountToken/</guid>
      <description>withAutomountServiceAccountToken(automountServiceAccountToken) AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.</description>
    </item>
    
    <item>
      <title>withBinaryData</title>
      <link>http://example.org/core/v1/configMap/withBinaryData/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/withBinaryData/</guid>
      <description>withBinaryData(binaryData) BinaryData contains the binary data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.</description>
    </item>
    
    <item>
      <title>withBinaryDataMixin</title>
      <link>http://example.org/core/v1/configMap/withBinaryDataMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/withBinaryDataMixin/</guid>
      <description>withBinaryDataMixin(binaryData) BinaryData contains the binary data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.</description>
    </item>
    
    <item>
      <title>withCachingMode</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/withCachingMode/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/withCachingMode/</guid>
      <description>withCachingMode(cachingMode) Host Caching mode: None, Read Only, Read Write.</description>
    </item>
    
    <item>
      <title>withCapacity</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withCapacity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withCapacity/</guid>
      <description>withCapacity(capacity) A description of the persistent volume&amp;rsquo;s resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity</description>
    </item>
    
    <item>
      <title>withCapacityMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withCapacityMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withCapacityMixin/</guid>
      <description>withCapacityMixin(capacity) A description of the persistent volume&amp;rsquo;s resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity</description>
    </item>
    
    <item>
      <title>withChapAuthDiscovery</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withChapAuthDiscovery/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withChapAuthDiscovery/</guid>
      <description>withChapAuthDiscovery(chapAuthDiscovery) whether support iSCSI Discovery CHAP authentication</description>
    </item>
    
    <item>
      <title>withChapAuthSession</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withChapAuthSession/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withChapAuthSession/</guid>
      <description>withChapAuthSession(chapAuthSession) whether support iSCSI Session CHAP authentication</description>
    </item>
    
    <item>
      <title>withClusterIp</title>
      <link>http://example.org/core/v1/service/spec/withClusterIp/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withClusterIp/</guid>
      <description>withClusterIp(clusterIp) clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are &amp;ldquo;None&amp;rdquo;, empty string (&amp;ldquo;&amp;rdquo;), or a valid IP address. &amp;ldquo;None&amp;rdquo; can be specified for headless services when proxying is not required.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/binding/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/configMap/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/endpoints/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/event/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/limitRange/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/namespace/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/node/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/pod/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/replicationController/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/secret/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/service/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withClusterName</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withClusterName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withClusterName/</guid>
      <description>withClusterName(clusterName) The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.</description>
    </item>
    
    <item>
      <title>withComponent</title>
      <link>http://example.org/core/v1/event/source/withComponent/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/source/withComponent/</guid>
      <description>withComponent(component) Component from which the event is generated.</description>
    </item>
    
    <item>
      <title>withContainers</title>
      <link>http://example.org/core/v1/pod/spec/withContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withContainers/</guid>
      <description>withContainers(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainers takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withContainers</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withContainers/</guid>
      <description>withContainers(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainers takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withContainers</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withContainers/</guid>
      <description>withContainers(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainers takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withContainersMixin</title>
      <link>http://example.org/core/v1/pod/spec/withContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withContainersMixin/</guid>
      <description>withContainersMixin(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainersMixin takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withContainersMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withContainersMixin/</guid>
      <description>withContainersMixin(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainersMixin takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withContainersMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withContainersMixin/</guid>
      <description>withContainersMixin(containers) List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
withContainersMixin takes an array of type containersType. You can create an instance of containersType with hidden.core.v1.container.new().
see hidden.core.v1.container</description>
    </item>
    
    <item>
      <title>withCount</title>
      <link>http://example.org/core/v1/event/series/withCount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/series/withCount/</guid>
      <description>withCount(count) Number of occurrences in this series up to the last heartbeat time</description>
    </item>
    
    <item>
      <title>withCount</title>
      <link>http://example.org/core/v1/event/withCount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withCount/</guid>
      <description>withCount(count) The number of times this event has occurred.</description>
    </item>
    
    <item>
      <title>withData</title>
      <link>http://example.org/core/v1/configMap/withData/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/withData/</guid>
      <description>withData(data) Data contains the configuration data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.</description>
    </item>
    
    <item>
      <title>withData</title>
      <link>http://example.org/core/v1/secret/withData/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/withData/</guid>
      <description>withData(data) Data contains the secret data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4</description>
    </item>
    
    <item>
      <title>withDataMixin</title>
      <link>http://example.org/core/v1/configMap/withDataMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/withDataMixin/</guid>
      <description>withDataMixin(data) Data contains the configuration data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.</description>
    </item>
    
    <item>
      <title>withDataMixin</title>
      <link>http://example.org/core/v1/secret/withDataMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/withDataMixin/</guid>
      <description>withDataMixin(data) Data contains the secret data. Each key must consist of alphanumeric characters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;_&amp;rsquo; or &amp;lsquo;.&amp;rsquo;. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4</description>
    </item>
    
    <item>
      <title>withDatasetName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flocker/withDatasetName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flocker/withDatasetName/</guid>
      <description>withDatasetName(datasetName) Name of the dataset stored as metadata -&amp;gt; name on the dataset for Flocker should be considered as deprecated</description>
    </item>
    
    <item>
      <title>withDatasetUuid</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flocker/withDatasetUuid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flocker/withDatasetUuid/</guid>
      <description>withDatasetUuid(datasetUuid) UUID of the dataset. This is unique identifier of a Flocker dataset</description>
    </item>
    
    <item>
      <title>withDiskName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/withDiskName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/withDiskName/</guid>
      <description>withDiskName(diskName) The Name of the data disk in the blob storage</description>
    </item>
    
    <item>
      <title>withDiskUri</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/withDiskUri/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/withDiskUri/</guid>
      <description>withDiskUri(diskUri) The URI the data disk in the blob storage</description>
    </item>
    
    <item>
      <title>withDnsPolicy</title>
      <link>http://example.org/core/v1/pod/spec/withDnsPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withDnsPolicy/</guid>
      <description>withDnsPolicy(dnsPolicy) Set DNS policy for the pod. Defaults to &amp;ldquo;ClusterFirst&amp;rdquo;. Valid values are &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;, &amp;lsquo;ClusterFirst&amp;rsquo;, &amp;lsquo;Default&amp;rsquo; or &amp;lsquo;None&amp;rsquo;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>withDnsPolicy</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withDnsPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withDnsPolicy/</guid>
      <description>withDnsPolicy(dnsPolicy) Set DNS policy for the pod. Defaults to &amp;ldquo;ClusterFirst&amp;rdquo;. Valid values are &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;, &amp;lsquo;ClusterFirst&amp;rsquo;, &amp;lsquo;Default&amp;rsquo; or &amp;lsquo;None&amp;rsquo;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>withDnsPolicy</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withDnsPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withDnsPolicy/</guid>
      <description>withDnsPolicy(dnsPolicy) Set DNS policy for the pod. Defaults to &amp;ldquo;ClusterFirst&amp;rdquo;. Valid values are &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;, &amp;lsquo;ClusterFirst&amp;rsquo;, &amp;lsquo;Default&amp;rsquo; or &amp;lsquo;None&amp;rsquo;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &amp;lsquo;ClusterFirstWithHostNet&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>withDriver</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withDriver/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withDriver/</guid>
      <description>withDriver(driver) Driver is the name of the driver to use for this volume. Required.</description>
    </item>
    
    <item>
      <title>withDriver</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/withDriver/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/withDriver/</guid>
      <description>withDriver(driver) Driver is the name of the driver to use for this volume.</description>
    </item>
    
    <item>
      <title>withEnableServiceLinks</title>
      <link>http://example.org/core/v1/pod/spec/withEnableServiceLinks/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withEnableServiceLinks/</guid>
      <description>withEnableServiceLinks(enableServiceLinks) EnableServiceLinks indicates whether information about services should be injected into pod&amp;rsquo;s environment variables, matching the syntax of Docker links. Optional: Defaults to true.</description>
    </item>
    
    <item>
      <title>withEnableServiceLinks</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withEnableServiceLinks/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withEnableServiceLinks/</guid>
      <description>withEnableServiceLinks(enableServiceLinks) EnableServiceLinks indicates whether information about services should be injected into pod&amp;rsquo;s environment variables, matching the syntax of Docker links. Optional: Defaults to true.</description>
    </item>
    
    <item>
      <title>withEnableServiceLinks</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withEnableServiceLinks/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withEnableServiceLinks/</guid>
      <description>withEnableServiceLinks(enableServiceLinks) EnableServiceLinks indicates whether information about services should be injected into pod&amp;rsquo;s environment variables, matching the syntax of Docker links. Optional: Defaults to true.</description>
    </item>
    
    <item>
      <title>withEndpoints</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/withEndpoints/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/withEndpoints/</guid>
      <description>withEndpoints(endpoints) EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod</description>
    </item>
    
    <item>
      <title>withEndpointsNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/withEndpointsNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/withEndpointsNamespace/</guid>
      <description>withEndpointsNamespace(endpointsNamespace) EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod</description>
    </item>
    
    <item>
      <title>withEventTime</title>
      <link>http://example.org/core/v1/event/withEventTime/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withEventTime/</guid>
      <description>withEventTime(eventTime) Time when this Event was first observed.</description>
    </item>
    
    <item>
      <title>withExternalId</title>
      <link>http://example.org/core/v1/node/spec/withExternalId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withExternalId/</guid>
      <description>withExternalId(externalId) Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966</description>
    </item>
    
    <item>
      <title>withExternalIps</title>
      <link>http://example.org/core/v1/service/spec/withExternalIps/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withExternalIps/</guid>
      <description>withExternalIps(externalIps) externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system.</description>
    </item>
    
    <item>
      <title>withExternalIpsMixin</title>
      <link>http://example.org/core/v1/service/spec/withExternalIpsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withExternalIpsMixin/</guid>
      <description>withExternalIpsMixin(externalIps) externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system.</description>
    </item>
    
    <item>
      <title>withExternalName</title>
      <link>http://example.org/core/v1/service/spec/withExternalName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withExternalName/</guid>
      <description>withExternalName(externalName) externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.</description>
    </item>
    
    <item>
      <title>withExternalTrafficPolicy</title>
      <link>http://example.org/core/v1/service/spec/withExternalTrafficPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withExternalTrafficPolicy/</guid>
      <description>withExternalTrafficPolicy(externalTrafficPolicy) externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. &amp;ldquo;Local&amp;rdquo; preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. &amp;ldquo;Cluster&amp;rdquo; obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.</description>
    </item>
    
    <item>
      <title>withFieldPath</title>
      <link>http://example.org/core/v1/binding/target/withFieldPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/withFieldPath/</guid>
      <description>withFieldPath(fieldPath) If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &amp;ldquo;spec.containers{name}&amp;rdquo; (where &amp;ldquo;name&amp;rdquo; refers to the name of the container that triggered the event) or if no container name is specified &amp;ldquo;spec.containers[2]&amp;rdquo; (container with index 2 in this pod).</description>
    </item>
    
    <item>
      <title>withFieldPath</title>
      <link>http://example.org/core/v1/event/involvedObject/withFieldPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/withFieldPath/</guid>
      <description>withFieldPath(fieldPath) If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &amp;ldquo;spec.containers{name}&amp;rdquo; (where &amp;ldquo;name&amp;rdquo; refers to the name of the container that triggered the event) or if no container name is specified &amp;ldquo;spec.containers[2]&amp;rdquo; (container with index 2 in this pod).</description>
    </item>
    
    <item>
      <title>withFieldPath</title>
      <link>http://example.org/core/v1/event/related/withFieldPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/withFieldPath/</guid>
      <description>withFieldPath(fieldPath) If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &amp;ldquo;spec.containers{name}&amp;rdquo; (where &amp;ldquo;name&amp;rdquo; refers to the name of the container that triggered the event) or if no container name is specified &amp;ldquo;spec.containers[2]&amp;rdquo; (container with index 2 in this pod).</description>
    </item>
    
    <item>
      <title>withFieldPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/withFieldPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/withFieldPath/</guid>
      <description>withFieldPath(fieldPath) If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &amp;ldquo;spec.containers{name}&amp;rdquo; (where &amp;ldquo;name&amp;rdquo; refers to the name of the container that triggered the event) or if no container name is specified &amp;ldquo;spec.containers[2]&amp;rdquo; (container with index 2 in this pod).</description>
    </item>
    
    <item>
      <title>withFieldPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withFieldPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withFieldPath/</guid>
      <description>withFieldPath(fieldPath) If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &amp;ldquo;spec.containers{name}&amp;rdquo; (where &amp;ldquo;name&amp;rdquo; refers to the name of the container that triggered the event) or if no container name is specified &amp;ldquo;spec.containers[2]&amp;rdquo; (container with index 2 in this pod).</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/binding/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/configMap/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/endpoints/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/event/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/limitRange/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/namespace/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/namespace/spec/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/spec/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/node/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/pod/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/replicationController/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/secret/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/service/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizers</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withFinalizers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withFinalizers/</guid>
      <description>withFinalizers(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/binding/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/event/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/namespace/spec/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/spec/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/node/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/pod/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/secret/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/service/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFinalizersMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withFinalizersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withFinalizersMixin/</guid>
      <description>withFinalizersMixin(finalizers) Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.</description>
    </item>
    
    <item>
      <title>withFirstTimestamp</title>
      <link>http://example.org/core/v1/event/withFirstTimestamp/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withFirstTimestamp/</guid>
      <description>withFirstTimestamp(firstTimestamp) The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)</description>
    </item>
    
    <item>
      <title>withFsGroup</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withFsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withFsGroup/</guid>
      <description>withFsGroup(fsGroup) A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR&amp;rsquo;d with rw-rw&amp;mdash;-

If unset, the Kubelet will not modify the ownership and permissions of any volume.</description>
    </item>
    
    <item>
      <title>withFsGroup</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withFsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withFsGroup/</guid>
      <description>withFsGroup(fsGroup) A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR&amp;rsquo;d with rw-rw&amp;mdash;-

If unset, the Kubelet will not modify the ownership and permissions of any volume.</description>
    </item>
    
    <item>
      <title>withFsGroup</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withFsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withFsGroup/</guid>
      <description>withFsGroup(fsGroup) A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR&amp;rsquo;d with rw-rw&amp;mdash;-

If unset, the Kubelet will not modify the ownership and permissions of any volume.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. The default filesystem depends on FlexVolume script.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/localStorage/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/localStorage/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. The default value is to auto-select a fileystem if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withFsType/</guid>
      <description>withFsType(fsType) FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Default is &amp;ldquo;xfs&amp;rdquo;</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withFsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withFsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withFsType/</guid>
      <description>withFsType(fsType) Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &amp;ldquo;ext4&amp;rdquo;, &amp;ldquo;xfs&amp;rdquo;, &amp;ldquo;ntfs&amp;rdquo;. Implicitly inferred to be &amp;ldquo;ext4&amp;rdquo; if unspecified.</description>
    </item>
    
    <item>
      <title>withGateway</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withGateway/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withGateway/</guid>
      <description>withGateway(gateway) The host address of the ScaleIO API Gateway.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/binding/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/configMap/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/endpoints/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/event/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/limitRange/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/namespace/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/node/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/pod/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/replicationController/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/secret/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/service/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGenerateName</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withGenerateName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withGenerateName/</guid>
      <description>withGenerateName(generateName) GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</description>
    </item>
    
    <item>
      <title>withGroup</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withGroup/</guid>
      <description>withGroup(group) Group to map volume access to Default is no group</description>
    </item>
    
    <item>
      <title>withHard</title>
      <link>http://example.org/core/v1/resourceQuota/spec/withHard/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/withHard/</guid>
      <description>withHard(hard) hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/</description>
    </item>
    
    <item>
      <title>withHardMixin</title>
      <link>http://example.org/core/v1/resourceQuota/spec/withHardMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/withHardMixin/</guid>
      <description>withHardMixin(hard) hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/</description>
    </item>
    
    <item>
      <title>withHealthCheckNodePort</title>
      <link>http://example.org/core/v1/service/spec/withHealthCheckNodePort/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withHealthCheckNodePort/</guid>
      <description>withHealthCheckNodePort(healthCheckNodePort) healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.</description>
    </item>
    
    <item>
      <title>withHost</title>
      <link>http://example.org/core/v1/event/source/withHost/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/source/withHost/</guid>
      <description>withHost(host) Node name on which the event is generated.</description>
    </item>
    
    <item>
      <title>withHostAliases</title>
      <link>http://example.org/core/v1/pod/spec/withHostAliases/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostAliases/</guid>
      <description>withHostAliases(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliases takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostAliases</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostAliases/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostAliases/</guid>
      <description>withHostAliases(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliases takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostAliases</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostAliases/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostAliases/</guid>
      <description>withHostAliases(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliases takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostAliasesMixin</title>
      <link>http://example.org/core/v1/pod/spec/withHostAliasesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostAliasesMixin/</guid>
      <description>withHostAliasesMixin(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliasesMixin takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostAliasesMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostAliasesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostAliasesMixin/</guid>
      <description>withHostAliasesMixin(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliasesMixin takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostAliasesMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostAliasesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostAliasesMixin/</guid>
      <description>withHostAliasesMixin(hostAliases) HostAliases is an optional list of hosts and IPs that will be injected into the pod&amp;rsquo;s hosts file if specified. This is only valid for non-hostNetwork pods.
withHostAliasesMixin takes an array of type hostAliasesType. You can create an instance of hostAliasesType with hidden.core.v1.hostAlias.new().
see hidden.core.v1.hostAlias</description>
    </item>
    
    <item>
      <title>withHostIpc</title>
      <link>http://example.org/core/v1/pod/spec/withHostIpc/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostIpc/</guid>
      <description>withHostIpc(hostIpc) Use the host&amp;rsquo;s ipc namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostIpc</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostIpc/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostIpc/</guid>
      <description>withHostIpc(hostIpc) Use the host&amp;rsquo;s ipc namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostIpc</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostIpc/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostIpc/</guid>
      <description>withHostIpc(hostIpc) Use the host&amp;rsquo;s ipc namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostNetwork</title>
      <link>http://example.org/core/v1/pod/spec/withHostNetwork/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostNetwork/</guid>
      <description>withHostNetwork(hostNetwork) Host networking requested for this pod. Use the host&amp;rsquo;s network namespace. If this option is set, the ports that will be used must be specified. Default to false.</description>
    </item>
    
    <item>
      <title>withHostNetwork</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostNetwork/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostNetwork/</guid>
      <description>withHostNetwork(hostNetwork) Host networking requested for this pod. Use the host&amp;rsquo;s network namespace. If this option is set, the ports that will be used must be specified. Default to false.</description>
    </item>
    
    <item>
      <title>withHostNetwork</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostNetwork/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostNetwork/</guid>
      <description>withHostNetwork(hostNetwork) Host networking requested for this pod. Use the host&amp;rsquo;s network namespace. If this option is set, the ports that will be used must be specified. Default to false.</description>
    </item>
    
    <item>
      <title>withHostPid</title>
      <link>http://example.org/core/v1/pod/spec/withHostPid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostPid/</guid>
      <description>withHostPid(hostPid) Use the host&amp;rsquo;s pid namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostPid</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostPid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostPid/</guid>
      <description>withHostPid(hostPid) Use the host&amp;rsquo;s pid namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostPid</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostPid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostPid/</guid>
      <description>withHostPid(hostPid) Use the host&amp;rsquo;s pid namespace. Optional: Default to false.</description>
    </item>
    
    <item>
      <title>withHostname</title>
      <link>http://example.org/core/v1/pod/spec/withHostname/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withHostname/</guid>
      <description>withHostname(hostname) Specifies the hostname of the Pod If not specified, the pod&amp;rsquo;s hostname will be set to a system-defined value.</description>
    </item>
    
    <item>
      <title>withHostname</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withHostname/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withHostname/</guid>
      <description>withHostname(hostname) Specifies the hostname of the Pod If not specified, the pod&amp;rsquo;s hostname will be set to a system-defined value.</description>
    </item>
    
    <item>
      <title>withHostname</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withHostname/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withHostname/</guid>
      <description>withHostname(hostname) Specifies the hostname of the Pod If not specified, the pod&amp;rsquo;s hostname will be set to a system-defined value.</description>
    </item>
    
    <item>
      <title>withImage</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withImage/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withImage/</guid>
      <description>withImage(image) The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withImagePullSecrets</title>
      <link>http://example.org/core/v1/pod/spec/withImagePullSecrets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withImagePullSecrets/</guid>
      <description>withImagePullSecrets(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecrets takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecrets</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withImagePullSecrets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withImagePullSecrets/</guid>
      <description>withImagePullSecrets(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecrets takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecrets</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withImagePullSecrets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withImagePullSecrets/</guid>
      <description>withImagePullSecrets(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecrets takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecrets</title>
      <link>http://example.org/core/v1/serviceAccount/withImagePullSecrets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/withImagePullSecrets/</guid>
      <description>withImagePullSecrets(imagePullSecrets) ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
withImagePullSecrets takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.core.v1.localObjectReference.new().
see hidden.core.v1.localObjectReference</description>
    </item>
    
    <item>
      <title>withImagePullSecretsMixin</title>
      <link>http://example.org/core/v1/pod/spec/withImagePullSecretsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withImagePullSecretsMixin/</guid>
      <description>withImagePullSecretsMixin(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecretsMixin takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecretsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withImagePullSecretsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withImagePullSecretsMixin/</guid>
      <description>withImagePullSecretsMixin(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecretsMixin takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecretsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withImagePullSecretsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withImagePullSecretsMixin/</guid>
      <description>withImagePullSecretsMixin(imagePullSecrets) ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
withImagePullSecretsMixin takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.</description>
    </item>
    
    <item>
      <title>withImagePullSecretsMixin</title>
      <link>http://example.org/core/v1/serviceAccount/withImagePullSecretsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/withImagePullSecretsMixin/</guid>
      <description>withImagePullSecretsMixin(imagePullSecrets) ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
withImagePullSecretsMixin takes an array of type imagePullSecretsType. You can create an instance of imagePullSecretsType with hidden.core.v1.localObjectReference.new().
see hidden.core.v1.localObjectReference</description>
    </item>
    
    <item>
      <title>withInitContainers</title>
      <link>http://example.org/core/v1/pod/spec/withInitContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withInitContainers/</guid>
      <description>withInitContainers(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitContainers</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withInitContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withInitContainers/</guid>
      <description>withInitContainers(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitContainers</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withInitContainers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withInitContainers/</guid>
      <description>withInitContainers(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitContainersMixin</title>
      <link>http://example.org/core/v1/pod/spec/withInitContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withInitContainersMixin/</guid>
      <description>withInitContainersMixin(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitContainersMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withInitContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withInitContainersMixin/</guid>
      <description>withInitContainersMixin(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitContainersMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withInitContainersMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withInitContainersMixin/</guid>
      <description>withInitContainersMixin(initContainers) List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers.</description>
    </item>
    
    <item>
      <title>withInitiatorName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withInitiatorName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withInitiatorName/</guid>
      <description>withInitiatorName(initiatorName) Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface :will be created for the connection.</description>
    </item>
    
    <item>
      <title>withIqn</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withIqn/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withIqn/</guid>
      <description>withIqn(iqn) Target iSCSI Qualified Name.</description>
    </item>
    
    <item>
      <title>withIscsiInterface</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withIscsiInterface/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withIscsiInterface/</guid>
      <description>withIscsiInterface(iscsiInterface) iSCSI Interface Name that uses an iSCSI transport. Defaults to &amp;lsquo;default&amp;rsquo; (tcp).</description>
    </item>
    
    <item>
      <title>withKeyring</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withKeyring/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withKeyring/</guid>
      <description>withKeyring(keyring) Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withKind</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withKind/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withKind/</guid>
      <description>withKind(kind) Kind is the type of resource being referenced</description>
    </item>
    
    <item>
      <title>withKubeletConfigKey</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/withKubeletConfigKey/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/withKubeletConfigKey/</guid>
      <description>withKubeletConfigKey(kubeletConfigKey) KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/binding/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/configMap/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/endpoints/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/event/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/limitRange/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/namespace/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/node/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/pod/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/replicationController/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/secret/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/service/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabels</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withLabels/</guid>
      <description>withLabels(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/binding/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/event/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/node/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/pod/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/secret/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/service/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLabelsMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withLabelsMixin/</guid>
      <description>withLabelsMixin(labels) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels</description>
    </item>
    
    <item>
      <title>withLastObservedTime</title>
      <link>http://example.org/core/v1/event/series/withLastObservedTime/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/series/withLastObservedTime/</guid>
      <description>withLastObservedTime(lastObservedTime) Time of the last occurrence observed</description>
    </item>
    
    <item>
      <title>withLastTimestamp</title>
      <link>http://example.org/core/v1/event/withLastTimestamp/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withLastTimestamp/</guid>
      <description>withLastTimestamp(lastTimestamp) The time at which the most recent occurrence of this event was recorded.</description>
    </item>
    
    <item>
      <title>withLevel</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withLevel/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withLevel/</guid>
      <description>withLevel(level) Level is SELinux level label that applies to the container.</description>
    </item>
    
    <item>
      <title>withLevel</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withLevel/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withLevel/</guid>
      <description>withLevel(level) Level is SELinux level label that applies to the container.</description>
    </item>
    
    <item>
      <title>withLevel</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withLevel/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withLevel/</guid>
      <description>withLevel(level) Level is SELinux level label that applies to the container.</description>
    </item>
    
    <item>
      <title>withLimits</title>
      <link>http://example.org/core/v1/limitRange/spec/withLimits/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/spec/withLimits/</guid>
      <description>withLimits(limits) Limits is the list of LimitRangeItem objects that are enforced.
withLimits takes an array of type limitsType. You can create an instance of limitsType with hidden.core.v1.limitRangeItem.new().
see hidden.core.v1.limitRangeItem</description>
    </item>
    
    <item>
      <title>withLimits</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withLimits/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withLimits/</guid>
      <description>withLimits(limits) Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</description>
    </item>
    
    <item>
      <title>withLimitsMixin</title>
      <link>http://example.org/core/v1/limitRange/spec/withLimitsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/spec/withLimitsMixin/</guid>
      <description>withLimitsMixin(limits) Limits is the list of LimitRangeItem objects that are enforced.
withLimitsMixin takes an array of type limitsType. You can create an instance of limitsType with hidden.core.v1.limitRangeItem.new().
see hidden.core.v1.limitRangeItem</description>
    </item>
    
    <item>
      <title>withLimitsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withLimitsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withLimitsMixin/</guid>
      <description>withLimitsMixin(limits) Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</description>
    </item>
    
    <item>
      <title>withLoadBalancerIp</title>
      <link>http://example.org/core/v1/service/spec/withLoadBalancerIp/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withLoadBalancerIp/</guid>
      <description>withLoadBalancerIp(loadBalancerIp) Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.</description>
    </item>
    
    <item>
      <title>withLoadBalancerSourceRanges</title>
      <link>http://example.org/core/v1/service/spec/withLoadBalancerSourceRanges/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withLoadBalancerSourceRanges/</guid>
      <description>withLoadBalancerSourceRanges(loadBalancerSourceRanges) If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.&amp;rdquo; More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/</description>
    </item>
    
    <item>
      <title>withLoadBalancerSourceRangesMixin</title>
      <link>http://example.org/core/v1/service/spec/withLoadBalancerSourceRangesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withLoadBalancerSourceRangesMixin/</guid>
      <description>withLoadBalancerSourceRangesMixin(loadBalancerSourceRanges) If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.&amp;rdquo; More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/</description>
    </item>
    
    <item>
      <title>withLun</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withLun/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withLun/</guid>
      <description>withLun(lun) Optional: FC target lun number</description>
    </item>
    
    <item>
      <title>withLun</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withLun/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withLun/</guid>
      <description>withLun(lun) iSCSI Target Lun number.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/binding/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/configMap/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/endpoints/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/event/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/limitRange/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/namespace/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/node/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/pod/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/replicationController/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/secret/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/service/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFields</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withManagedFields/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withManagedFields/</guid>
      <description>withManagedFields(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/binding/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/event/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/node/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/pod/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/secret/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/service/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withManagedFieldsMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withManagedFieldsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withManagedFieldsMixin/</guid>
      <description>withManagedFieldsMixin(managedFields) ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn&amp;rsquo;t need to set or understand this field. A workflow can be the user&amp;rsquo;s name, a controller&amp;rsquo;s name, or the name of a specific apply path like &amp;ldquo;ci-cd&amp;rdquo;. The set of fields is always in the version that the workflow used when modifying the object.</description>
    </item>
    
    <item>
      <title>withMatchExpressions</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchExpressions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchExpressions/</guid>
      <description>withMatchExpressions(matchExpressions) matchExpressions is a list of label selector requirements. The requirements are ANDed.
withMatchExpressions takes an array of type matchExpressionsType. You can create an instance of matchExpressionsType with hidden.meta.v1.labelSelectorRequirement.new().
see hidden.meta.v1.labelSelectorRequirement</description>
    </item>
    
    <item>
      <title>withMatchExpressions</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelector/withMatchExpressions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelector/withMatchExpressions/</guid>
      <description>withMatchExpressions(matchExpressions) A list of scope selector requirements by scope of the resources.
withMatchExpressions takes an array of type matchExpressionsType. You can create an instance of matchExpressionsType with hidden.core.v1.scopedResourceSelectorRequirement.new().
see hidden.core.v1.scopedResourceSelectorRequirement</description>
    </item>
    
    <item>
      <title>withMatchExpressionsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchExpressionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchExpressionsMixin/</guid>
      <description>withMatchExpressionsMixin(matchExpressions) matchExpressions is a list of label selector requirements. The requirements are ANDed.
withMatchExpressionsMixin takes an array of type matchExpressionsType. You can create an instance of matchExpressionsType with hidden.meta.v1.labelSelectorRequirement.new().
see hidden.meta.v1.labelSelectorRequirement</description>
    </item>
    
    <item>
      <title>withMatchExpressionsMixin</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelector/withMatchExpressionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelector/withMatchExpressionsMixin/</guid>
      <description>withMatchExpressionsMixin(matchExpressions) A list of scope selector requirements by scope of the resources.
withMatchExpressionsMixin takes an array of type matchExpressionsType. You can create an instance of matchExpressionsType with hidden.core.v1.scopedResourceSelectorRequirement.new().
see hidden.core.v1.scopedResourceSelectorRequirement</description>
    </item>
    
    <item>
      <title>withMatchLabels</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchLabels/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchLabels/</guid>
      <description>withMatchLabels(matchLabels) matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.</description>
    </item>
    
    <item>
      <title>withMatchLabelsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchLabelsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/withMatchLabelsMixin/</guid>
      <description>withMatchLabelsMixin(matchLabels) matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.</description>
    </item>
    
    <item>
      <title>withMessage</title>
      <link>http://example.org/core/v1/event/withMessage/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withMessage/</guid>
      <description>withMessage(message) A human-readable description of the status of this operation.</description>
    </item>
    
    <item>
      <title>withMinReadySeconds</title>
      <link>http://example.org/core/v1/replicationController/spec/withMinReadySeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/withMinReadySeconds/</guid>
      <description>withMinReadySeconds(minReadySeconds) Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)</description>
    </item>
    
    <item>
      <title>withMonitors</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withMonitors/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withMonitors/</guid>
      <description>withMonitors(monitors) Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withMonitors</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withMonitors/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withMonitors/</guid>
      <description>withMonitors(monitors) A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withMonitorsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withMonitorsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withMonitorsMixin/</guid>
      <description>withMonitorsMixin(monitors) Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withMonitorsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withMonitorsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withMonitorsMixin/</guid>
      <description>withMonitorsMixin(monitors) A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withMountOptions</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withMountOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withMountOptions/</guid>
      <description>withMountOptions(mountOptions) A list of mount options, e.g. [&amp;ldquo;ro&amp;rdquo;, &amp;ldquo;soft&amp;rdquo;]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options</description>
    </item>
    
    <item>
      <title>withMountOptionsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withMountOptionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withMountOptionsMixin/</guid>
      <description>withMountOptionsMixin(mountOptions) A list of mount options, e.g. [&amp;ldquo;ro&amp;rdquo;, &amp;ldquo;soft&amp;rdquo;]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/binding/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/binding/target/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/withName/</guid>
      <description>withName(name) Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/configMap/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/endpoints/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/event/involvedObject/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/withName/</guid>
      <description>withName(name) Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/event/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/event/related/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/withName/</guid>
      <description>withName(name) Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/limitRange/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/namespace/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/node/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/withName/</guid>
      <description>withName(name) Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/withName/</guid>
      <description>withName(name) Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/withName/</guid>
      <description>withName(name) Name is unique within a namespace to reference a secret resource.</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withName/</guid>
      <description>withName(name) Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/withName/</guid>
      <description>withName(name) Name is the name of resource being referenced</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/pod/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/replicationController/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/secret/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/service/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withName</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withName/</guid>
      <description>withName(name) Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names</description>
    </item>
    
    <item>
      <title>withNameservers</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withNameservers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withNameservers/</guid>
      <description>withNameservers(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNameservers</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withNameservers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withNameservers/</guid>
      <description>withNameservers(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNameservers</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withNameservers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withNameservers/</guid>
      <description>withNameservers(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNameserversMixin</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withNameserversMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withNameserversMixin/</guid>
      <description>withNameserversMixin(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNameserversMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withNameserversMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withNameserversMixin/</guid>
      <description>withNameserversMixin(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNameserversMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withNameserversMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withNameserversMixin/</guid>
      <description>withNameserversMixin(nameservers) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/binding/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/binding/target/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/configMap/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/endpoints/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/event/involvedObject/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/event/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/event/related/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/limitRange/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/namespace/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/node/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within which the secret name must be unique.</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/pod/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/replicationController/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/secret/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/service/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNamespace</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withNamespace/</guid>
      <description>withNamespace(namespace) Namespace defines the space within each name must be unique. An empty namespace is equivalent to the &amp;ldquo;default&amp;rdquo; namespace, but &amp;ldquo;default&amp;rdquo; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces</description>
    </item>
    
    <item>
      <title>withNodeName</title>
      <link>http://example.org/core/v1/pod/spec/withNodeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withNodeName/</guid>
      <description>withNodeName(nodeName) NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.</description>
    </item>
    
    <item>
      <title>withNodeName</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withNodeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withNodeName/</guid>
      <description>withNodeName(nodeName) NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.</description>
    </item>
    
    <item>
      <title>withNodeName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withNodeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withNodeName/</guid>
      <description>withNodeName(nodeName) NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.</description>
    </item>
    
    <item>
      <title>withNodeSelector</title>
      <link>http://example.org/core/v1/pod/spec/withNodeSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withNodeSelector/</guid>
      <description>withNodeSelector(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelector</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withNodeSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withNodeSelector/</guid>
      <description>withNodeSelector(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelector</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withNodeSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withNodeSelector/</guid>
      <description>withNodeSelector(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelectorMixin</title>
      <link>http://example.org/core/v1/pod/spec/withNodeSelectorMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withNodeSelectorMixin/</guid>
      <description>withNodeSelectorMixin(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelectorMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withNodeSelectorMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withNodeSelectorMixin/</guid>
      <description>withNodeSelectorMixin(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelectorMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withNodeSelectorMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withNodeSelectorMixin/</guid>
      <description>withNodeSelectorMixin(nodeSelector) NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node&amp;rsquo;s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</description>
    </item>
    
    <item>
      <title>withNodeSelectorTerms</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/withNodeSelectorTerms/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/withNodeSelectorTerms/</guid>
      <description>withNodeSelectorTerms(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTerms takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTerms</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</guid>
      <description>withNodeSelectorTerms(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTerms takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTerms</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</guid>
      <description>withNodeSelectorTerms(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTerms takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTerms</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTerms/</guid>
      <description>withNodeSelectorTerms(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTerms takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTermsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/withNodeSelectorTermsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/withNodeSelectorTermsMixin/</guid>
      <description>withNodeSelectorTermsMixin(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTermsMixin takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTermsMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</guid>
      <description>withNodeSelectorTermsMixin(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTermsMixin takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTermsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</guid>
      <description>withNodeSelectorTermsMixin(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTermsMixin takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withNodeSelectorTermsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/withNodeSelectorTermsMixin/</guid>
      <description>withNodeSelectorTermsMixin(nodeSelectorTerms) Required. A list of node selector terms. The terms are ORed.
withNodeSelectorTermsMixin takes an array of type nodeSelectorTermsType. You can create an instance of nodeSelectorTermsType with hidden.core.v1.nodeSelectorTerm.new().
see hidden.core.v1.nodeSelectorTerm</description>
    </item>
    
    <item>
      <title>withOptions</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/withOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/withOptions/</guid>
      <description>withOptions(options) Optional: Extra command options if any.</description>
    </item>
    
    <item>
      <title>withOptions</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withOptions/</guid>
      <description>withOptions(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptions takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOptions</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withOptions/</guid>
      <description>withOptions(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptions takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOptions</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withOptions/</guid>
      <description>withOptions(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptions takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOptionsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/withOptionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/withOptionsMixin/</guid>
      <description>withOptionsMixin(options) Optional: Extra command options if any.</description>
    </item>
    
    <item>
      <title>withOptionsMixin</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withOptionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withOptionsMixin/</guid>
      <description>withOptionsMixin(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptionsMixin takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOptionsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withOptionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withOptionsMixin/</guid>
      <description>withOptionsMixin(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptionsMixin takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOptionsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withOptionsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withOptionsMixin/</guid>
      <description>withOptionsMixin(options) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
withOptionsMixin takes an array of type optionsType. You can create an instance of optionsType with hidden.core.v1.podDnsConfigOption.new().
see hidden.core.v1.podDnsConfigOption</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/binding/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/configMap/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/endpoints/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/event/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/limitRange/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/namespace/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/node/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/pod/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/replicationController/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/secret/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/service/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferences</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withOwnerReferences/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withOwnerReferences/</guid>
      <description>withOwnerReferences(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferences takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/binding/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/event/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/node/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/pod/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/secret/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/service/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withOwnerReferencesMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/withOwnerReferencesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/withOwnerReferencesMixin/</guid>
      <description>withOwnerReferencesMixin(ownerReferences) List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
withOwnerReferencesMixin takes an array of type ownerReferencesType. You can create an instance of ownerReferencesType with hidden.</description>
    </item>
    
    <item>
      <title>withPartition</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withPartition/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withPartition/</guid>
      <description>withPartition(partition) The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as &amp;ldquo;1&amp;rdquo;. Similarly, the volume partition for /dev/sda is &amp;ldquo;0&amp;rdquo; (or you can leave the property empty).</description>
    </item>
    
    <item>
      <title>withPartition</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withPartition/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withPartition/</guid>
      <description>withPartition(partition) The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as &amp;ldquo;1&amp;rdquo;. Similarly, the volume partition for /dev/sda is &amp;ldquo;0&amp;rdquo; (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withPath/</guid>
      <description>withPath(path) Optional: Used as the mounted root, rather than the full Ceph tree, default is /</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/withPath/</guid>
      <description>withPath(path) Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/hostPath/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/hostPath/withPath/</guid>
      <description>withPath(path) Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/localStorage/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/localStorage/withPath/</guid>
      <description>withPath(path) The full path to the volume on the node. It can be either a directory or block device (disk, partition, &amp;hellip;).</description>
    </item>
    
    <item>
      <title>withPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfs/withPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfs/withPath/</guid>
      <description>withPath(path) Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</description>
    </item>
    
    <item>
      <title>withPdId</title>
      <link>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/withPdId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/withPdId/</guid>
      <description>withPdId(pdId) ID that identifies Photon Controller persistent disk</description>
    </item>
    
    <item>
      <title>withPdName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withPdName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withPdName/</guid>
      <description>withPdName(pdName) Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/binding/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/configMap/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/event/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/namespace/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/node/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/pod/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/secret/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/service/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPending</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializers/withPending/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializers/withPending/</guid>
      <description>withPending(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPending takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/binding/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/configMap/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/event/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/namespace/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/node/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/pod/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/secret/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/service/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPendingMixin</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializers/withPendingMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializers/withPendingMixin/</guid>
      <description>withPendingMixin(pending) Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
withPendingMixin takes an array of type pendingType. You can create an instance of pendingType with hidden.meta.v1.initializer.new().
see hidden.meta.v1.initializer</description>
    </item>
    
    <item>
      <title>withPersistentVolumeReclaimPolicy</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withPersistentVolumeReclaimPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withPersistentVolumeReclaimPolicy/</guid>
      <description>withPersistentVolumeReclaimPolicy(persistentVolumeReclaimPolicy) What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming</description>
    </item>
    
    <item>
      <title>withPodCidr</title>
      <link>http://example.org/core/v1/node/spec/withPodCidr/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withPodCidr/</guid>
      <description>withPodCidr(podCidr) PodCIDR represents the pod IP range assigned to the node.</description>
    </item>
    
    <item>
      <title>withPool</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withPool/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withPool/</guid>
      <description>withPool(pool) The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withPortals</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withPortals/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withPortals/</guid>
      <description>withPortals(portals) iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).</description>
    </item>
    
    <item>
      <title>withPortalsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withPortalsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withPortalsMixin/</guid>
      <description>withPortalsMixin(portals) iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).</description>
    </item>
    
    <item>
      <title>withPorts</title>
      <link>http://example.org/core/v1/service/spec/withPorts/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withPorts/</guid>
      <description>withPorts(ports) The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
withPorts takes an array of type portsType. You can create an instance of portsType with hidden.core.v1.servicePort.new().
see hidden.core.v1.servicePort</description>
    </item>
    
    <item>
      <title>withPortsMixin</title>
      <link>http://example.org/core/v1/service/spec/withPortsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withPortsMixin/</guid>
      <description>withPortsMixin(ports) The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
withPortsMixin takes an array of type portsType. You can create an instance of portsType with hidden.core.v1.servicePort.new().
see hidden.core.v1.servicePort</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPreferredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withPreferredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution) The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &amp;ldquo;weight&amp;rdquo; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</description>
    </item>
    
    <item>
      <title>withPriority</title>
      <link>http://example.org/core/v1/pod/spec/withPriority/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withPriority/</guid>
      <description>withPriority(priority) The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.</description>
    </item>
    
    <item>
      <title>withPriority</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withPriority/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withPriority/</guid>
      <description>withPriority(priority) The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.</description>
    </item>
    
    <item>
      <title>withPriority</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withPriority/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withPriority/</guid>
      <description>withPriority(priority) The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.</description>
    </item>
    
    <item>
      <title>withPriorityClassName</title>
      <link>http://example.org/core/v1/pod/spec/withPriorityClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withPriorityClassName/</guid>
      <description>withPriorityClassName(priorityClassName) If specified, indicates the pod&amp;rsquo;s priority. &amp;ldquo;system-node-critical&amp;rdquo; and &amp;ldquo;system-cluster-critical&amp;rdquo; are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.</description>
    </item>
    
    <item>
      <title>withPriorityClassName</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withPriorityClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withPriorityClassName/</guid>
      <description>withPriorityClassName(priorityClassName) If specified, indicates the pod&amp;rsquo;s priority. &amp;ldquo;system-node-critical&amp;rdquo; and &amp;ldquo;system-cluster-critical&amp;rdquo; are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.</description>
    </item>
    
    <item>
      <title>withPriorityClassName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withPriorityClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withPriorityClassName/</guid>
      <description>withPriorityClassName(priorityClassName) If specified, indicates the pod&amp;rsquo;s priority. &amp;ldquo;system-node-critical&amp;rdquo; and &amp;ldquo;system-cluster-critical&amp;rdquo; are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.</description>
    </item>
    
    <item>
      <title>withProtectionDomain</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withProtectionDomain/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withProtectionDomain/</guid>
      <description>withProtectionDomain(protectionDomain) The name of the ScaleIO Protection Domain for the configured storage.</description>
    </item>
    
    <item>
      <title>withProviderId</title>
      <link>http://example.org/core/v1/node/spec/withProviderId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withProviderId/</guid>
      <description>withProviderId(providerId) ID of the node assigned by the cloud provider in the format: ://</description>
    </item>
    
    <item>
      <title>withPublishNotReadyAddresses</title>
      <link>http://example.org/core/v1/service/spec/withPublishNotReadyAddresses/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withPublishNotReadyAddresses/</guid>
      <description>withPublishNotReadyAddresses(publishNotReadyAddresses) publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet&amp;rsquo;s Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Specify &amp;ldquo;true&amp;rdquo; to force and set the ReadOnly property in VolumeMounts to &amp;ldquo;true&amp;rdquo;. If omitted, the default is &amp;ldquo;false&amp;rdquo;. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfs/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfs/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withReadOnly/</guid>
      <description>withReadOnly(readOnly) ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadOnly</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/withReadOnly/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/withReadOnly/</guid>
      <description>withReadOnly(readOnly) Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</description>
    </item>
    
    <item>
      <title>withReadinessGates</title>
      <link>http://example.org/core/v1/pod/spec/withReadinessGates/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withReadinessGates/</guid>
      <description>withReadinessGates(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGates takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReadinessGates</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withReadinessGates/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withReadinessGates/</guid>
      <description>withReadinessGates(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGates takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReadinessGates</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withReadinessGates/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withReadinessGates/</guid>
      <description>withReadinessGates(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGates takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReadinessGatesMixin</title>
      <link>http://example.org/core/v1/pod/spec/withReadinessGatesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withReadinessGatesMixin/</guid>
      <description>withReadinessGatesMixin(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGatesMixin takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReadinessGatesMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withReadinessGatesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withReadinessGatesMixin/</guid>
      <description>withReadinessGatesMixin(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGatesMixin takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReadinessGatesMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withReadinessGatesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withReadinessGatesMixin/</guid>
      <description>withReadinessGatesMixin(readinessGates) If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to &amp;ldquo;True&amp;rdquo; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
withReadinessGatesMixin takes an array of type readinessGatesType. You can create an instance of readinessGatesType with hidden.core.v1.podReadinessGate.new().
see hidden.core.v1.podReadinessGate</description>
    </item>
    
    <item>
      <title>withReason</title>
      <link>http://example.org/core/v1/event/withReason/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withReason/</guid>
      <description>withReason(reason) This should be a short, machine understandable string that gives the reason for the transition into the object&amp;rsquo;s current status.</description>
    </item>
    
    <item>
      <title>withRegistry</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withRegistry/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withRegistry/</guid>
      <description>withRegistry(registry) Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes</description>
    </item>
    
    <item>
      <title>withReplicas</title>
      <link>http://example.org/core/v1/replicationController/spec/withReplicas/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/withReplicas/</guid>
      <description>withReplicas(replicas) Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller</description>
    </item>
    
    <item>
      <title>withReportingComponent</title>
      <link>http://example.org/core/v1/event/withReportingComponent/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withReportingComponent/</guid>
      <description>withReportingComponent(reportingComponent) Name of the controller that emitted this Event, e.g. kubernetes.io/kubelet.</description>
    </item>
    
    <item>
      <title>withReportingInstance</title>
      <link>http://example.org/core/v1/event/withReportingInstance/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withReportingInstance/</guid>
      <description>withReportingInstance(reportingInstance) ID of the controller instance, e.g. kubelet-xyzf.</description>
    </item>
    
    <item>
      <title>withRequests</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withRequests/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withRequests/</guid>
      <description>withRequests(requests) Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</description>
    </item>
    
    <item>
      <title>withRequestsMixin</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withRequestsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/withRequestsMixin/</guid>
      <description>withRequestsMixin(requests) Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withRequiredDuringSchedulingIgnoredDuringExecutionMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/withRequiredDuringSchedulingIgnoredDuringExecutionMixin/</guid>
      <description>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution) If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/binding/target/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/event/involvedObject/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/event/related/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency</description>
    </item>
    
    <item>
      <title>withResourceVersion</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withResourceVersion/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withResourceVersion/</guid>
      <description>withResourceVersion(resourceVersion) Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency</description>
    </item>
    
    <item>
      <title>withRestartPolicy</title>
      <link>http://example.org/core/v1/pod/spec/withRestartPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withRestartPolicy/</guid>
      <description>withRestartPolicy(restartPolicy) Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy</description>
    </item>
    
    <item>
      <title>withRestartPolicy</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withRestartPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withRestartPolicy/</guid>
      <description>withRestartPolicy(restartPolicy) Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy</description>
    </item>
    
    <item>
      <title>withRestartPolicy</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withRestartPolicy/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withRestartPolicy/</guid>
      <description>withRestartPolicy(restartPolicy) Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy</description>
    </item>
    
    <item>
      <title>withRole</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withRole/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withRole/</guid>
      <description>withRole(role) Role is a SELinux role label that applies to the container.</description>
    </item>
    
    <item>
      <title>withRole</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withRole/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withRole/</guid>
      <description>withRole(role) Role is a SELinux role label that applies to the container.</description>
    </item>
    
    <item>
      <title>withRole</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withRole/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withRole/</guid>
      <description>withRole(role) Role is a SELinux role label that applies to the container.</description>
    </item>
    
    <item>
      <title>withRunAsGroup</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withRunAsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withRunAsGroup/</guid>
      <description>withRunAsGroup(runAsGroup) The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRunAsGroup</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsGroup/</guid>
      <description>withRunAsGroup(runAsGroup) The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRunAsGroup</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsGroup/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsGroup/</guid>
      <description>withRunAsGroup(runAsGroup) The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRunAsNonRoot</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withRunAsNonRoot/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withRunAsNonRoot/</guid>
      <description>withRunAsNonRoot(runAsNonRoot) Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.</description>
    </item>
    
    <item>
      <title>withRunAsNonRoot</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsNonRoot/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsNonRoot/</guid>
      <description>withRunAsNonRoot(runAsNonRoot) Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.</description>
    </item>
    
    <item>
      <title>withRunAsNonRoot</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsNonRoot/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsNonRoot/</guid>
      <description>withRunAsNonRoot(runAsNonRoot) Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.</description>
    </item>
    
    <item>
      <title>withRunAsUser</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withRunAsUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withRunAsUser/</guid>
      <description>withRunAsUser(runAsUser) The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRunAsUser</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withRunAsUser/</guid>
      <description>withRunAsUser(runAsUser) The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRunAsUser</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withRunAsUser/</guid>
      <description>withRunAsUser(runAsUser) The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>withRuntimeClassName</title>
      <link>http://example.org/core/v1/pod/spec/withRuntimeClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withRuntimeClassName/</guid>
      <description>withRuntimeClassName(runtimeClassName) RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod. If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the &amp;ldquo;legacy&amp;rdquo; RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is an alpha feature and may change in the future.</description>
    </item>
    
    <item>
      <title>withRuntimeClassName</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withRuntimeClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withRuntimeClassName/</guid>
      <description>withRuntimeClassName(runtimeClassName) RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod. If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the &amp;ldquo;legacy&amp;rdquo; RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is an alpha feature and may change in the future.</description>
    </item>
    
    <item>
      <title>withRuntimeClassName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withRuntimeClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withRuntimeClassName/</guid>
      <description>withRuntimeClassName(runtimeClassName) RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod. If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the &amp;ldquo;legacy&amp;rdquo; RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is an alpha feature and may change in the future.</description>
    </item>
    
    <item>
      <title>withSchedulerName</title>
      <link>http://example.org/core/v1/pod/spec/withSchedulerName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withSchedulerName/</guid>
      <description>withSchedulerName(schedulerName) If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.</description>
    </item>
    
    <item>
      <title>withSchedulerName</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withSchedulerName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withSchedulerName/</guid>
      <description>withSchedulerName(schedulerName) If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.</description>
    </item>
    
    <item>
      <title>withSchedulerName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withSchedulerName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withSchedulerName/</guid>
      <description>withSchedulerName(schedulerName) If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.</description>
    </item>
    
    <item>
      <title>withScopes</title>
      <link>http://example.org/core/v1/resourceQuota/spec/withScopes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/withScopes/</guid>
      <description>withScopes(scopes) A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.</description>
    </item>
    
    <item>
      <title>withScopesMixin</title>
      <link>http://example.org/core/v1/resourceQuota/spec/withScopesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/withScopesMixin/</guid>
      <description>withScopesMixin(scopes) A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.</description>
    </item>
    
    <item>
      <title>withSearches</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withSearches/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withSearches/</guid>
      <description>withSearches(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSearches</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withSearches/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withSearches/</guid>
      <description>withSearches(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSearches</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withSearches/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withSearches/</guid>
      <description>withSearches(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSearchesMixin</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/withSearchesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/withSearchesMixin/</guid>
      <description>withSearchesMixin(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSearchesMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withSearchesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/withSearchesMixin/</guid>
      <description>withSearchesMixin(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSearchesMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withSearchesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/withSearchesMixin/</guid>
      <description>withSearchesMixin(searches) A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.</description>
    </item>
    
    <item>
      <title>withSecretFile</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withSecretFile/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withSecretFile/</guid>
      <description>withSecretFile(secretFile) Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withSecretName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/withSecretName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/withSecretName/</guid>
      <description>withSecretName(secretName) the name of secret that contains Azure Storage Account Name and Key</description>
    </item>
    
    <item>
      <title>withSecretNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/withSecretNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/withSecretNamespace/</guid>
      <description>withSecretNamespace(secretNamespace) the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod</description>
    </item>
    
    <item>
      <title>withSecrets</title>
      <link>http://example.org/core/v1/serviceAccount/withSecrets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/withSecrets/</guid>
      <description>withSecrets(secrets) Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
withSecrets takes an array of type secretsType. You can create an instance of secretsType with hidden.core.v1.objectReference.new().
see hidden.core.v1.objectReference</description>
    </item>
    
    <item>
      <title>withSecretsMixin</title>
      <link>http://example.org/core/v1/serviceAccount/withSecretsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/withSecretsMixin/</guid>
      <description>withSecretsMixin(secrets) Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
withSecretsMixin takes an array of type secretsType. You can create an instance of secretsType with hidden.core.v1.objectReference.new().
see hidden.core.v1.objectReference</description>
    </item>
    
    <item>
      <title>withSelector</title>
      <link>http://example.org/core/v1/replicationController/spec/withSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/withSelector/</guid>
      <description>withSelector(selector) Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors</description>
    </item>
    
    <item>
      <title>withSelector</title>
      <link>http://example.org/core/v1/service/spec/withSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withSelector/</guid>
      <description>withSelector(selector) Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/</description>
    </item>
    
    <item>
      <title>withSelectorMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/withSelectorMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/withSelectorMixin/</guid>
      <description>withSelectorMixin(selector) Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors</description>
    </item>
    
    <item>
      <title>withSelectorMixin</title>
      <link>http://example.org/core/v1/service/spec/withSelectorMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withSelectorMixin/</guid>
      <description>withSelectorMixin(selector) Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/</description>
    </item>
    
    <item>
      <title>withServer</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfs/withServer/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfs/withServer/</guid>
      <description>withServer(server) Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</description>
    </item>
    
    <item>
      <title>withServiceAccount</title>
      <link>http://example.org/core/v1/pod/spec/withServiceAccount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withServiceAccount/</guid>
      <description>withServiceAccount(serviceAccount) DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.</description>
    </item>
    
    <item>
      <title>withServiceAccount</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withServiceAccount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withServiceAccount/</guid>
      <description>withServiceAccount(serviceAccount) DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.</description>
    </item>
    
    <item>
      <title>withServiceAccount</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withServiceAccount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withServiceAccount/</guid>
      <description>withServiceAccount(serviceAccount) DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.</description>
    </item>
    
    <item>
      <title>withServiceAccountName</title>
      <link>http://example.org/core/v1/pod/spec/withServiceAccountName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withServiceAccountName/</guid>
      <description>withServiceAccountName(serviceAccountName) ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/</description>
    </item>
    
    <item>
      <title>withServiceAccountName</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withServiceAccountName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withServiceAccountName/</guid>
      <description>withServiceAccountName(serviceAccountName) ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/</description>
    </item>
    
    <item>
      <title>withServiceAccountName</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withServiceAccountName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withServiceAccountName/</guid>
      <description>withServiceAccountName(serviceAccountName) ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/</description>
    </item>
    
    <item>
      <title>withSessionAffinity</title>
      <link>http://example.org/core/v1/service/spec/withSessionAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withSessionAffinity/</guid>
      <description>withSessionAffinity(sessionAffinity) Supports &amp;ldquo;ClientIP&amp;rdquo; and &amp;ldquo;None&amp;rdquo;. Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies</description>
    </item>
    
    <item>
      <title>withShareName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/withShareName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/withShareName/</guid>
      <description>withShareName(shareName) Share Name</description>
    </item>
    
    <item>
      <title>withShareProcessNamespace</title>
      <link>http://example.org/core/v1/pod/spec/withShareProcessNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withShareProcessNamespace/</guid>
      <description>withShareProcessNamespace(shareProcessNamespace) Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.</description>
    </item>
    
    <item>
      <title>withShareProcessNamespace</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withShareProcessNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withShareProcessNamespace/</guid>
      <description>withShareProcessNamespace(shareProcessNamespace) Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.</description>
    </item>
    
    <item>
      <title>withShareProcessNamespace</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withShareProcessNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withShareProcessNamespace/</guid>
      <description>withShareProcessNamespace(shareProcessNamespace) Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.</description>
    </item>
    
    <item>
      <title>withSslEnabled</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withSslEnabled/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withSslEnabled/</guid>
      <description>withSslEnabled(sslEnabled) Flag to enable/disable SSL communication with Gateway, default false</description>
    </item>
    
    <item>
      <title>withState</title>
      <link>http://example.org/core/v1/event/series/withState/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/series/withState/</guid>
      <description>withState(state) State of this Series: Ongoing or Finished</description>
    </item>
    
    <item>
      <title>withStorageClassName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withStorageClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withStorageClassName/</guid>
      <description>withStorageClassName(storageClassName) Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.</description>
    </item>
    
    <item>
      <title>withStorageClassName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/withStorageClassName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/withStorageClassName/</guid>
      <description>withStorageClassName(storageClassName) Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1</description>
    </item>
    
    <item>
      <title>withStorageMode</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withStorageMode/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withStorageMode/</guid>
      <description>withStorageMode(storageMode) Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.</description>
    </item>
    
    <item>
      <title>withStoragePolicyId</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withStoragePolicyId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withStoragePolicyId/</guid>
      <description>withStoragePolicyId(storagePolicyId) Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.</description>
    </item>
    
    <item>
      <title>withStoragePolicyName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withStoragePolicyName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withStoragePolicyName/</guid>
      <description>withStoragePolicyName(storagePolicyName) Storage Policy Based Management (SPBM) profile name.</description>
    </item>
    
    <item>
      <title>withStoragePool</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withStoragePool/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withStoragePool/</guid>
      <description>withStoragePool(storagePool) The ScaleIO Storage Pool associated with the protection domain.</description>
    </item>
    
    <item>
      <title>withStringData</title>
      <link>http://example.org/core/v1/secret/withStringData/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/withStringData/</guid>
      <description>withStringData(stringData) stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.</description>
    </item>
    
    <item>
      <title>withStringDataMixin</title>
      <link>http://example.org/core/v1/secret/withStringDataMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/withStringDataMixin/</guid>
      <description>withStringDataMixin(stringData) stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.</description>
    </item>
    
    <item>
      <title>withSubdomain</title>
      <link>http://example.org/core/v1/pod/spec/withSubdomain/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withSubdomain/</guid>
      <description>withSubdomain(subdomain) If specified, the fully qualified Pod hostname will be &amp;ldquo;...svc.&amp;rdquo;. If not specified, the pod will not have a domainname at all.</description>
    </item>
    
    <item>
      <title>withSubdomain</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withSubdomain/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withSubdomain/</guid>
      <description>withSubdomain(subdomain) If specified, the fully qualified Pod hostname will be &amp;ldquo;...svc.&amp;rdquo;. If not specified, the pod will not have a domainname at all.</description>
    </item>
    
    <item>
      <title>withSubdomain</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withSubdomain/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withSubdomain/</guid>
      <description>withSubdomain(subdomain) If specified, the fully qualified Pod hostname will be &amp;ldquo;...svc.&amp;rdquo;. If not specified, the pod will not have a domainname at all.</description>
    </item>
    
    <item>
      <title>withSubsets</title>
      <link>http://example.org/core/v1/endpoints/withSubsets/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/withSubsets/</guid>
      <description>withSubsets(subsets) The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset.</description>
    </item>
    
    <item>
      <title>withSubsetsMixin</title>
      <link>http://example.org/core/v1/endpoints/withSubsetsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/withSubsetsMixin/</guid>
      <description>withSubsetsMixin(subsets) The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset.</description>
    </item>
    
    <item>
      <title>withSupplementalGroups</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withSupplementalGroups/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withSupplementalGroups/</guid>
      <description>withSupplementalGroups(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSupplementalGroups</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSupplementalGroups/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSupplementalGroups/</guid>
      <description>withSupplementalGroups(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSupplementalGroups</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSupplementalGroups/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSupplementalGroups/</guid>
      <description>withSupplementalGroups(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSupplementalGroupsMixin</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withSupplementalGroupsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withSupplementalGroupsMixin/</guid>
      <description>withSupplementalGroupsMixin(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSupplementalGroupsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSupplementalGroupsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSupplementalGroupsMixin/</guid>
      <description>withSupplementalGroupsMixin(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSupplementalGroupsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSupplementalGroupsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSupplementalGroupsMixin/</guid>
      <description>withSupplementalGroupsMixin(supplementalGroups) A list of groups applied to the first process run in each container, in addition to the container&amp;rsquo;s primary GID. If unspecified, no groups will be added to any container.</description>
    </item>
    
    <item>
      <title>withSysctls</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withSysctls/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withSysctls/</guid>
      <description>withSysctls(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctls takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSysctls</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSysctls/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSysctls/</guid>
      <description>withSysctls(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctls takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSysctls</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSysctls/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSysctls/</guid>
      <description>withSysctls(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctls takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSysctlsMixin</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/withSysctlsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/withSysctlsMixin/</guid>
      <description>withSysctlsMixin(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctlsMixin takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSysctlsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSysctlsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/withSysctlsMixin/</guid>
      <description>withSysctlsMixin(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctlsMixin takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSysctlsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSysctlsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/withSysctlsMixin/</guid>
      <description>withSysctlsMixin(sysctls) Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
withSysctlsMixin takes an array of type sysctlsType. You can create an instance of sysctlsType with hidden.core.v1.sysctl.new().
see hidden.core.v1.sysctl</description>
    </item>
    
    <item>
      <title>withSystem</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withSystem/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withSystem/</guid>
      <description>withSystem(system) The name of the storage system as configured in ScaleIO.</description>
    </item>
    
    <item>
      <title>withTaints</title>
      <link>http://example.org/core/v1/node/spec/withTaints/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withTaints/</guid>
      <description>withTaints(taints) If specified, the node&amp;rsquo;s taints.
withTaints takes an array of type taintsType. You can create an instance of taintsType with hidden.core.v1.taint.new().
see hidden.core.v1.taint</description>
    </item>
    
    <item>
      <title>withTaintsMixin</title>
      <link>http://example.org/core/v1/node/spec/withTaintsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withTaintsMixin/</guid>
      <description>withTaintsMixin(taints) If specified, the node&amp;rsquo;s taints.
withTaintsMixin takes an array of type taintsType. You can create an instance of taintsType with hidden.core.v1.taint.new().
see hidden.core.v1.taint</description>
    </item>
    
    <item>
      <title>withTargetPortal</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/withTargetPortal/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/withTargetPortal/</guid>
      <description>withTargetPortal(targetPortal) iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).</description>
    </item>
    
    <item>
      <title>withTargetWwns</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withTargetWwns/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withTargetWwns/</guid>
      <description>withTargetWwns(targetWwns) Optional: FC target worldwide names (WWNs)</description>
    </item>
    
    <item>
      <title>withTargetWwnsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withTargetWwnsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withTargetWwnsMixin/</guid>
      <description>withTargetWwnsMixin(targetWwns) Optional: FC target worldwide names (WWNs)</description>
    </item>
    
    <item>
      <title>withTenant</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withTenant/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withTenant/</guid>
      <description>withTenant(tenant) Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin</description>
    </item>
    
    <item>
      <title>withTerminationGracePeriodSeconds</title>
      <link>http://example.org/core/v1/pod/spec/withTerminationGracePeriodSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withTerminationGracePeriodSeconds/</guid>
      <description>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds) Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal.</description>
    </item>
    
    <item>
      <title>withTerminationGracePeriodSeconds</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withTerminationGracePeriodSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withTerminationGracePeriodSeconds/</guid>
      <description>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds) Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal.</description>
    </item>
    
    <item>
      <title>withTerminationGracePeriodSeconds</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withTerminationGracePeriodSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withTerminationGracePeriodSeconds/</guid>
      <description>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds) Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal.</description>
    </item>
    
    <item>
      <title>withTimeoutSeconds</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/withTimeoutSeconds/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/withTimeoutSeconds/</guid>
      <description>withTimeoutSeconds(timeoutSeconds) timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be &amp;gt;0 &amp;amp;&amp;amp; &amp;lt;=86400(for 1 day) if ServiceAffinity == &amp;ldquo;ClientIP&amp;rdquo;. Default value is 10800(for 3 hours).</description>
    </item>
    
    <item>
      <title>withTolerations</title>
      <link>http://example.org/core/v1/pod/spec/withTolerations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withTolerations/</guid>
      <description>withTolerations(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerations takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withTolerations</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withTolerations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withTolerations/</guid>
      <description>withTolerations(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerations takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withTolerations</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withTolerations/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withTolerations/</guid>
      <description>withTolerations(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerations takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withTolerationsMixin</title>
      <link>http://example.org/core/v1/pod/spec/withTolerationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withTolerationsMixin/</guid>
      <description>withTolerationsMixin(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerationsMixin takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withTolerationsMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withTolerationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withTolerationsMixin/</guid>
      <description>withTolerationsMixin(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerationsMixin takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withTolerationsMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withTolerationsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withTolerationsMixin/</guid>
      <description>withTolerationsMixin(tolerations) If specified, the pod&amp;rsquo;s tolerations.
withTolerationsMixin takes an array of type tolerationsType. You can create an instance of tolerationsType with hidden.core.v1.toleration.new().
see hidden.core.v1.toleration</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/event/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/withType/</guid>
      <description>withType(type) Type of this event (Normal, Warning), new types could be added in the future</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/hostPath/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/hostPath/withType/</guid>
      <description>withType(type) Type for HostPath Volume Defaults to &amp;ldquo;&amp;rdquo; More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withType/</guid>
      <description>withType(type) Type is a SELinux type label that applies to the container.</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withType/</guid>
      <description>withType(type) Type is a SELinux type label that applies to the container.</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withType/</guid>
      <description>withType(type) Type is a SELinux type label that applies to the container.</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/secret/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/withType/</guid>
      <description>withType(type) Used to facilitate programmatic handling of secret data.</description>
    </item>
    
    <item>
      <title>withType</title>
      <link>http://example.org/core/v1/service/spec/withType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/withType/</guid>
      <description>withType(type) type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. &amp;ldquo;ExternalName&amp;rdquo; maps to the specified externalName. &amp;ldquo;ClusterIP&amp;rdquo; allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is &amp;ldquo;None&amp;rdquo;, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/binding/target/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/withUid/</guid>
      <description>withUid(uid) UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/event/involvedObject/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/withUid/</guid>
      <description>withUid(uid) UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/event/related/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/withUid/</guid>
      <description>withUid(uid) UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/withUid/</guid>
      <description>withUid(uid) UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/withUid/</guid>
      <description>withUid(uid) UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</description>
    </item>
    
    <item>
      <title>withUid</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withUid/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/withUid/</guid>
      <description>withUid(uid) UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</description>
    </item>
    
    <item>
      <title>withUnschedulable</title>
      <link>http://example.org/core/v1/node/spec/withUnschedulable/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/withUnschedulable/</guid>
      <description>withUnschedulable(unschedulable) Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/withUser/</guid>
      <description>withUser(user) Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withUser/</guid>
      <description>withUser(user) User to map volume access to Defaults to serivceaccount user</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/withUser/</guid>
      <description>withUser(user) The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/withUser/</guid>
      <description>withUser(user) User is a SELinux user label that applies to the container.</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/withUser/</guid>
      <description>withUser(user) User is a SELinux user label that applies to the container.</description>
    </item>
    
    <item>
      <title>withUser</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withUser/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/withUser/</guid>
      <description>withUser(user) User is a SELinux user label that applies to the container.</description>
    </item>
    
    <item>
      <title>withVolume</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/withVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/withVolume/</guid>
      <description>withVolume(volume) Volume is a string that references an already created Quobyte volume by name.</description>
    </item>
    
    <item>
      <title>withVolumeAttributes</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeAttributes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeAttributes/</guid>
      <description>withVolumeAttributes(volumeAttributes) Attributes of the volume to publish.</description>
    </item>
    
    <item>
      <title>withVolumeAttributesMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeAttributesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeAttributesMixin/</guid>
      <description>withVolumeAttributesMixin(volumeAttributes) Attributes of the volume to publish.</description>
    </item>
    
    <item>
      <title>withVolumeHandle</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeHandle/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/withVolumeHandle/</guid>
      <description>withVolumeHandle(volumeHandle) VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.</description>
    </item>
    
    <item>
      <title>withVolumeId</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withVolumeId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/withVolumeId/</guid>
      <description>withVolumeId(volumeId) Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</description>
    </item>
    
    <item>
      <title>withVolumeId</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/withVolumeId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/withVolumeId/</guid>
      <description>withVolumeId(volumeId) volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md</description>
    </item>
    
    <item>
      <title>withVolumeId</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withVolumeId/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolume/withVolumeId/</guid>
      <description>withVolumeId(volumeId) VolumeID uniquely identifies a Portworx volume</description>
    </item>
    
    <item>
      <title>withVolumeMode</title>
      <link>http://example.org/core/v1/persistentVolume/spec/withVolumeMode/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/withVolumeMode/</guid>
      <description>withVolumeMode(volumeMode) volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is a beta feature.</description>
    </item>
    
    <item>
      <title>withVolumeMode</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/withVolumeMode/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/withVolumeMode/</guid>
      <description>withVolumeMode(volumeMode) volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.</description>
    </item>
    
    <item>
      <title>withVolumeName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/withVolumeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/withVolumeName/</guid>
      <description>withVolumeName(volumeName) The name of a volume already created in the ScaleIO system that is associated with this volume source.</description>
    </item>
    
    <item>
      <title>withVolumeName</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/withVolumeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/withVolumeName/</guid>
      <description>withVolumeName(volumeName) VolumeName is the human-readable name of the StorageOS volume. Volume names are only unique within a namespace.</description>
    </item>
    
    <item>
      <title>withVolumeName</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/withVolumeName/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/withVolumeName/</guid>
      <description>withVolumeName(volumeName) VolumeName is the binding reference to the PersistentVolume backing this claim.</description>
    </item>
    
    <item>
      <title>withVolumeNamespace</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/withVolumeNamespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/withVolumeNamespace/</guid>
      <description>withVolumeNamespace(volumeNamespace) VolumeNamespace specifies the scope of the volume within StorageOS. If no namespace is specified then the Pod&amp;rsquo;s namespace will be used. This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to &amp;ldquo;default&amp;rdquo; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.</description>
    </item>
    
    <item>
      <title>withVolumePath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withVolumePath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/withVolumePath/</guid>
      <description>withVolumePath(volumePath) Path that identifies vSphere volume vmdk</description>
    </item>
    
    <item>
      <title>withVolumes</title>
      <link>http://example.org/core/v1/pod/spec/withVolumes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withVolumes/</guid>
      <description>withVolumes(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumes takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withVolumes</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withVolumes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withVolumes/</guid>
      <description>withVolumes(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumes takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withVolumes</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withVolumes/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withVolumes/</guid>
      <description>withVolumes(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumes takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withVolumesMixin</title>
      <link>http://example.org/core/v1/pod/spec/withVolumesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/withVolumesMixin/</guid>
      <description>withVolumesMixin(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumesMixin takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withVolumesMixin</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/withVolumesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/withVolumesMixin/</guid>
      <description>withVolumesMixin(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumesMixin takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withVolumesMixin</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/withVolumesMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/withVolumesMixin/</guid>
      <description>withVolumesMixin(volumes) List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
withVolumesMixin takes an array of type volumesType. You can create an instance of volumesType with hidden.core.v1.volume.new().
see hidden.core.v1.volume</description>
    </item>
    
    <item>
      <title>withWwids</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withWwids/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withWwids/</guid>
      <description>withWwids(wwids) Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.</description>
    </item>
    
    <item>
      <title>withWwidsMixin</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/withWwidsMixin/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/withWwidsMixin/</guid>
      <description>withWwidsMixin(wwids) Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.</description>
    </item>
    
    <item>
      <title>affinity</title>
      <link>http://example.org/core/v1/pod/spec/affinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/</guid>
      <description>If specified, the pod&#39;s scheduling constraints</description>
    </item>
    
    <item>
      <title>affinity</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/</guid>
      <description>If specified, the pod&#39;s scheduling constraints</description>
    </item>
    
    <item>
      <title>affinity</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/</guid>
      <description>If specified, the pod&#39;s scheduling constraints</description>
    </item>
    
    <item>
      <title>awsElasticBlockStore</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStore/</guid>
      <description>AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet&#39;s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</description>
    </item>
    
    <item>
      <title>azureDisk</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDisk/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDisk/</guid>
      <description>AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</description>
    </item>
    
    <item>
      <title>azureFile</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFile/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFile/</guid>
      <description>AzureFile represents an Azure File Service mount on the host and bind mount to the pod.</description>
    </item>
    
    <item>
      <title>cephfs</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/</guid>
      <description>CephFS represents a Ceph FS mount on the host that shares a pod&#39;s lifetime</description>
    </item>
    
    <item>
      <title>cinder</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/</guid>
      <description>Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md</description>
    </item>
    
    <item>
      <title>claimRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRef/</guid>
      <description>ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding</description>
    </item>
    
    <item>
      <title>clientIp</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIp/</guid>
      <description>clientIP contains the configurations of Client IP based session affinity.</description>
    </item>
    
    <item>
      <title>configMap</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMap/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMap/</guid>
      <description>ConfigMap is a reference to a Node&#39;s ConfigMap</description>
    </item>
    
    <item>
      <title>configSource</title>
      <link>http://example.org/core/v1/node/spec/configSource/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/</guid>
      <description>If specified, the source to get node configuration from The DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this field</description>
    </item>
    
    <item>
      <title>controllerPublishSecretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRef/</guid>
      <description>ControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.</description>
    </item>
    
    <item>
      <title>csi</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/</guid>
      <description>CSI represents storage that is handled by an external CSI driver (Beta feature).</description>
    </item>
    
    <item>
      <title>dataSource</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSource/</guid>
      <description>This field requires the VolumeSnapshotDataSource alpha feature gate to be enabled and currently VolumeSnapshot is the only supported data source. If the provisioner can support VolumeSnapshot data source, it will create a new volume and data will be restored to the volume at the same time. If the provisioner does not support VolumeSnapshot data source, volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.</description>
    </item>
    
    <item>
      <title>dnsConfig</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/</guid>
      <description>Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.</description>
    </item>
    
    <item>
      <title>dnsConfig</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/</guid>
      <description>Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.</description>
    </item>
    
    <item>
      <title>dnsConfig</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/</guid>
      <description>Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.</description>
    </item>
    
    <item>
      <title>fc</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fc/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fc/</guid>
      <description>FC represents a Fibre Channel resource that is attached to a kubelet&#39;s host machine and then exposed to the pod.</description>
    </item>
    
    <item>
      <title>flexVolume</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/</guid>
      <description>FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</description>
    </item>
    
    <item>
      <title>flocker</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flocker/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flocker/</guid>
      <description>Flocker represents a Flocker volume attached to a kubelet&#39;s host machine and exposed to the pod for its usage. This depends on the Flocker control service being running</description>
    </item>
    
    <item>
      <title>gcePersistentDisk</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDisk/</guid>
      <description>GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet&#39;s host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</description>
    </item>
    
    <item>
      <title>glusterfs</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfs/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfs/</guid>
      <description>Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md</description>
    </item>
    
    <item>
      <title>hostPath</title>
      <link>http://example.org/core/v1/persistentVolume/spec/hostPath/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/hostPath/</guid>
      <description>HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/binding/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/configMap/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/event/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/namespace/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/node/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/pod/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/secret/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/service/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>initializers</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializers/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializers/</guid>
      <description>An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven&#39;t explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers.</description>
    </item>
    
    <item>
      <title>involvedObject</title>
      <link>http://example.org/core/v1/event/involvedObject/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObject/</guid>
      <description>The object that this event is about.</description>
    </item>
    
    <item>
      <title>iscsi</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/</guid>
      <description>ISCSI represents an ISCSI Disk resource that is attached to a kubelet&#39;s host machine and then exposed to the pod. Provisioned by an admin.</description>
    </item>
    
    <item>
      <title>localStorage</title>
      <link>http://example.org/core/v1/persistentVolume/spec/localStorage/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/localStorage/</guid>
      <description>Local represents directly-attached storage with node affinity</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/binding/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/configMap/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/endpoints/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/event/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/limitRange/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/namespace/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/node/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/pod/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/podTemplate/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/replicationController/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/</guid>
      <description>If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/secret/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/service/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>metadata</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/</guid>
      <description>Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata</description>
    </item>
    
    <item>
      <title>nfs</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfs/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfs/</guid>
      <description>NFS represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</description>
    </item>
    
    <item>
      <title>nodeAffinity</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/</guid>
      <description>NodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.</description>
    </item>
    
    <item>
      <title>nodeAffinity</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/</guid>
      <description>Describes node affinity scheduling rules for the pod.</description>
    </item>
    
    <item>
      <title>nodeAffinity</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/</guid>
      <description>Describes node affinity scheduling rules for the pod.</description>
    </item>
    
    <item>
      <title>nodeAffinity</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/</guid>
      <description>Describes node affinity scheduling rules for the pod.</description>
    </item>
    
    <item>
      <title>nodePublishSecretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRef/</guid>
      <description>NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.</description>
    </item>
    
    <item>
      <title>nodeStageSecretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRef/</guid>
      <description>NodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.</description>
    </item>
    
    <item>
      <title>photonPersistentDisk</title>
      <link>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/photonPersistentDisk/</guid>
      <description>PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</description>
    </item>
    
    <item>
      <title>podAffinity</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/</guid>
      <description>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>podAffinity</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/</guid>
      <description>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>podAffinity</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/</guid>
      <description>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>podAntiAffinity</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/</guid>
      <description>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>podAntiAffinity</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/</guid>
      <description>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>podAntiAffinity</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/</guid>
      <description>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</description>
    </item>
    
    <item>
      <title>portworxVolume</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolume/</guid>
      <description>PortworxVolume represents a portworx volume attached and mounted on kubelets host machine</description>
    </item>
    
    <item>
      <title>quobyte</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyte/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyte/</guid>
      <description>Quobyte represents a Quobyte mount on the host that shares a pod&#39;s lifetime</description>
    </item>
    
    <item>
      <title>rbd</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/</guid>
      <description>RBD represents a Rados Block Device mount on the host that shares a pod&#39;s lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md</description>
    </item>
    
    <item>
      <title>related</title>
      <link>http://example.org/core/v1/event/related/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/related/</guid>
      <description>Optional secondary object for more complex actions.</description>
    </item>
    
    <item>
      <title>required</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/</guid>
      <description>Required specifies hard node constraints that must be met.</description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecution</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/</guid>
      <description>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</description>
    </item>
    
    <item>
      <title>resources</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resources/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resources/</guid>
      <description>Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</description>
    </item>
    
    <item>
      <title>scaleIo</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/</guid>
      <description>ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</description>
    </item>
    
    <item>
      <title>scopeSelector</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelector/</guid>
      <description>scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.</description>
    </item>
    
    <item>
      <title>seLinuxOptions</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptions/</guid>
      <description>The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>seLinuxOptions</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptions/</guid>
      <description>The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>seLinuxOptions</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptions/</guid>
      <description>The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRef/</guid>
      <description>Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/secretRef/</guid>
      <description>Optional: points to a secret object containing parameters used to connect to OpenStack.</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRef/</guid>
      <description>Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRef/</guid>
      <description>CHAP Secret for iSCSI target and initiator authentication</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/secretRef/</guid>
      <description>SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRef/</guid>
      <description>SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</description>
    </item>
    
    <item>
      <title>secretRef</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRef/</guid>
      <description>SecretRef specifies the secret to use for obtaining the StorageOS API credentials. If not specified, default values will be attempted.</description>
    </item>
    
    <item>
      <title>securityContext</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/</guid>
      <description>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.</description>
    </item>
    
    <item>
      <title>securityContext</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/</guid>
      <description>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.</description>
    </item>
    
    <item>
      <title>securityContext</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/</guid>
      <description>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.</description>
    </item>
    
    <item>
      <title>selector</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/</guid>
      <description>A label query over volumes to consider for binding.</description>
    </item>
    
    <item>
      <title>series</title>
      <link>http://example.org/core/v1/event/series/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/series/</guid>
      <description>Data about the Event series this event represents or nil if it&#39;s a singleton Event.</description>
    </item>
    
    <item>
      <title>sessionAffinityConfig</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/</guid>
      <description>sessionAffinityConfig contains the configurations of session affinity.</description>
    </item>
    
    <item>
      <title>source</title>
      <link>http://example.org/core/v1/event/source/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/source/</guid>
      <description>The component reporting this event. Should be a short machine understandable string.</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/limitRange/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/spec/</guid>
      <description>Spec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/namespace/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/spec/</guid>
      <description>Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/node/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/</guid>
      <description>Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/persistentVolume/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/</guid>
      <description>Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/</guid>
      <description>Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/pod/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/</guid>
      <description>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/</guid>
      <description>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/replicationController/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/</guid>
      <description>Spec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/</guid>
      <description>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/resourceQuota/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/</guid>
      <description>Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>spec</title>
      <link>http://example.org/core/v1/service/spec/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/</guid>
      <description>Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>storageos</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/</guid>
      <description>StorageOS represents a StorageOS volume that is attached to the kubelet&#39;s host machine and mounted into the pod More info: https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md</description>
    </item>
    
    <item>
      <title>target</title>
      <link>http://example.org/core/v1/binding/target/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/target/</guid>
      <description>The target object that you want to bind to the standard object.</description>
    </item>
    
    <item>
      <title>template</title>
      <link>http://example.org/core/v1/podTemplate/template/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/</guid>
      <description>Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status</description>
    </item>
    
    <item>
      <title>template</title>
      <link>http://example.org/core/v1/replicationController/spec/template/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/</guid>
      <description>Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template</description>
    </item>
    
    <item>
      <title>vsphereVolume</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolume/</guid>
      <description>VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</description>
    </item>
    
    <item>
      <title>affinityType</title>
      <link>http://example.org/core/v1/pod/spec/affinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>affinityType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>affinityType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>awsElasticBlockStoreType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStoreType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/awsElasticBlockStoreType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>azureDiskType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureDiskType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureDiskType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>azureFileType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/azureFileType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/azureFileType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>cephfsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>cinderType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinderType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinderType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>claimRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/claimRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/claimRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>clientIPType</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIPType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfig/clientIPType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>configMapType</title>
      <link>http://example.org/core/v1/node/spec/configSource/configMapType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSource/configMapType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>configSourceType</title>
      <link>http://example.org/core/v1/node/spec/configSourceType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/configSourceType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>containersType</title>
      <link>http://example.org/core/v1/pod/spec/containersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/containersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>containersType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/containersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/containersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>containersType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/containersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/containersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>controllerPublishSecretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/controllerPublishSecretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>csiType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csiType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csiType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>dataSourceType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/dataSourceType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/dataSourceType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>dnsConfigType</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfigType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfigType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>dnsConfigType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfigType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfigType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>dnsConfigType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfigType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfigType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>fcType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/fcType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/fcType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>flexVolumeType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolumeType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolumeType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>flockerType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flockerType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flockerType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gcePersistentDiskType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/gcePersistentDiskType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/gcePersistentDiskType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>glusterfsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/glusterfsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/glusterfsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>hostAliasesType</title>
      <link>http://example.org/core/v1/pod/spec/hostAliasesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/hostAliasesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>hostAliasesType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/hostAliasesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/hostAliasesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>hostAliasesType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/hostAliasesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/hostAliasesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>hostPathType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/hostPathType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/hostPathType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>imagePullSecretsType</title>
      <link>http://example.org/core/v1/pod/spec/imagePullSecretsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/imagePullSecretsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>imagePullSecretsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/imagePullSecretsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/imagePullSecretsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>imagePullSecretsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/imagePullSecretsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/imagePullSecretsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>imagePullSecretsType</title>
      <link>http://example.org/core/v1/serviceAccount/imagePullSecretsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/imagePullSecretsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initContainersType</title>
      <link>http://example.org/core/v1/pod/spec/initContainersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/initContainersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initContainersType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/initContainersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/initContainersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initContainersType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/initContainersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/initContainersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/binding/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/configMap/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/event/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/namespace/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/node/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/pod/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/secret/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/service/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>initializersType</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializersType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializersType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>involvedObjectType</title>
      <link>http://example.org/core/v1/event/involvedObjectType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/involvedObjectType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>iscsiType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsiType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsiType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>limitsType</title>
      <link>http://example.org/core/v1/limitRange/spec/limitsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/spec/limitsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>localType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/localType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/localType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/binding/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/configMap/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/endpoints/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/event/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/limitRange/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/namespace/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/node/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/pod/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/podTemplate/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/replicationController/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/secret/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/service/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>managedFieldsType</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/managedFieldsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/managedFieldsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>matchExpressionsType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selector/matchExpressionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selector/matchExpressionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>matchExpressionsType</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelector/matchExpressionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelector/matchExpressionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/binding/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/configMap/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/endpoints/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/event/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/limitRange/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/namespace/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/node/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/persistentVolume/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/pod/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/podTemplate/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/podTemplate/template/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/replicationController/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/resourceQuota/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/secret/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/service/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>metadataType</title>
      <link>http://example.org/core/v1/serviceAccount/metadataType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadataType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nfsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nfsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nfsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeAffinityType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeAffinityType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeAffinityType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeAffinityType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodePublishSecretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodePublishSecretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeSelectorTermsType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/nodeSelectorTermsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/required/nodeSelectorTermsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeSelectorTermsType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeSelectorTermsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeSelectorTermsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTermsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nodeStageSecretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/csi/nodeStageSecretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>optionsType</title>
      <link>http://example.org/core/v1/pod/spec/dnsConfig/optionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/dnsConfig/optionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>optionsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/optionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/dnsConfig/optionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>optionsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/optionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/dnsConfig/optionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/binding/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/configMap/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/endpoints/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/event/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/limitRange/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/namespace/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/node/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/pod/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/podTemplate/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/replicationController/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/secret/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/service/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ownerReferencesType</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/ownerReferencesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/ownerReferencesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/binding/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/configMap/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/endpoints/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/event/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/limitRange/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/namespace/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/node/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/persistentVolume/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/pod/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/podTemplate/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/podTemplate/template/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/replicationController/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/resourceQuota/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/secret/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/service/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pendingType</title>
      <link>http://example.org/core/v1/serviceAccount/metadata/initializers/pendingType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/metadata/initializers/pendingType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>photonPersistentDiskType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/photonPersistentDiskType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/photonPersistentDiskType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAffinityType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAffinityType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAffinityType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAntiAffinityType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAntiAffinityType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>podAntiAffinityType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinityType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinityType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>portsType</title>
      <link>http://example.org/core/v1/service/spec/portsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/portsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>portworxVolumeType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/portworxVolumeType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/portworxVolumeType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>preferredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>quobyteType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/quobyteType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/quobyteType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>rbdType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbdType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbdType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>readinessGatesType</title>
      <link>http://example.org/core/v1/pod/spec/readinessGatesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/readinessGatesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>readinessGatesType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/readinessGatesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/readinessGatesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>readinessGatesType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/readinessGatesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/readinessGatesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>relatedType</title>
      <link>http://example.org/core/v1/event/relatedType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/relatedType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredDuringSchedulingIgnoredDuringExecutionType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/affinity/podAntiAffinity/requiredDuringSchedulingIgnoredDuringExecutionType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>requiredType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/requiredType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/nodeAffinity/requiredType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>resourcesType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/resourcesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/resourcesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scaleIOType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIOType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIOType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scopeSelectorType</title>
      <link>http://example.org/core/v1/resourceQuota/spec/scopeSelectorType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/spec/scopeSelectorType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>seLinuxOptionsType</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/seLinuxOptionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>seLinuxOptionsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/seLinuxOptionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>seLinuxOptionsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptionsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/seLinuxOptionsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cephfs/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/cinder/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/cinder/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/flexVolume/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/iscsi/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/rbd/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/rbd/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/scaleIo/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretRefType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageos/secretRefType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageos/secretRefType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>secretsType</title>
      <link>http://example.org/core/v1/serviceAccount/secretsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/secretsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>securityContextType</title>
      <link>http://example.org/core/v1/pod/spec/securityContextType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContextType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>securityContextType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContextType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContextType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>securityContextType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContextType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContextType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>selectorType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/spec/selectorType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/spec/selectorType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>seriesType</title>
      <link>http://example.org/core/v1/event/seriesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/seriesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sessionAffinityConfigType</title>
      <link>http://example.org/core/v1/service/spec/sessionAffinityConfigType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/spec/sessionAffinityConfigType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sourceType</title>
      <link>http://example.org/core/v1/event/sourceType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/sourceType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/limitRange/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/namespace/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/node/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/persistentVolume/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/pod/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/podTemplate/template/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/replicationController/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/resourceQuota/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>specType</title>
      <link>http://example.org/core/v1/service/specType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/specType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>storageosType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/storageosType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/storageosType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>subsetsType</title>
      <link>http://example.org/core/v1/endpoints/subsetsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/subsetsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sysctlsType</title>
      <link>http://example.org/core/v1/pod/spec/securityContext/sysctlsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/securityContext/sysctlsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sysctlsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/securityContext/sysctlsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/securityContext/sysctlsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sysctlsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/sysctlsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/securityContext/sysctlsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>taintsType</title>
      <link>http://example.org/core/v1/node/spec/taintsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/spec/taintsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>targetType</title>
      <link>http://example.org/core/v1/binding/targetType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/targetType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>templateType</title>
      <link>http://example.org/core/v1/podTemplate/templateType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/templateType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>templateType</title>
      <link>http://example.org/core/v1/replicationController/spec/templateType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/templateType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tolerationsType</title>
      <link>http://example.org/core/v1/pod/spec/tolerationsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/tolerationsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tolerationsType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/tolerationsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/tolerationsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tolerationsType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/tolerationsType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/tolerationsType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>volumesType</title>
      <link>http://example.org/core/v1/pod/spec/volumesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/spec/volumesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>volumesType</title>
      <link>http://example.org/core/v1/podTemplate/template/spec/volumesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/template/spec/volumesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>volumesType</title>
      <link>http://example.org/core/v1/replicationController/spec/template/spec/volumesType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/spec/template/spec/volumesType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>vsphereVolumeType</title>
      <link>http://example.org/core/v1/persistentVolume/spec/vsphereVolumeType/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:41 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/spec/vsphereVolumeType/</guid>
      <description></description>
    </item>
    
    <item>
      <title>binding</title>
      <link>http://example.org/core/binding/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/binding/</guid>
      <description>Binding ties one object to another; for example, a pod is bound to a node by a scheduler.  </description>
    </item>
    
    <item>
      <title>binding</title>
      <link>http://example.org/core/v1/binding/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/binding/</guid>
      <description>Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.</description>
    </item>
    
    <item>
      <title>configMap</title>
      <link>http://example.org/core/configMap/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/configMap/</guid>
      <description>ConfigMap holds configuration data for pods to consume.  </description>
    </item>
    
    <item>
      <title>configMap</title>
      <link>http://example.org/core/v1/configMap/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/configMap/</guid>
      <description>ConfigMap holds configuration data for pods to consume.</description>
    </item>
    
    <item>
      <title>endpoints</title>
      <link>http://example.org/core/endpoints/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/endpoints/</guid>
      <description>Endpoints is a collection of endpoints that implement the actual service.  </description>
    </item>
    
    <item>
      <title>endpoints</title>
      <link>http://example.org/core/v1/endpoints/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/endpoints/</guid>
      <description>Endpoints is a collection of endpoints that implement the actual service. Example: Name: &amp;ldquo;mysvc&amp;rdquo;, Subsets: [ { Addresses: [{&amp;ldquo;ip&amp;rdquo;: &amp;ldquo;10.10.1.1&amp;rdquo;}, {&amp;ldquo;ip&amp;rdquo;: &amp;ldquo;10.10.2.2&amp;rdquo;}], Ports: [{&amp;ldquo;name&amp;rdquo;: &amp;ldquo;a&amp;rdquo;, &amp;ldquo;port&amp;rdquo;: 8675}, {&amp;ldquo;name&amp;rdquo;: &amp;ldquo;b&amp;rdquo;, &amp;ldquo;port&amp;rdquo;: 309}] }, { Addresses: [{&amp;ldquo;ip&amp;rdquo;: &amp;ldquo;10.10.3.3&amp;rdquo;}], Ports: [{&amp;ldquo;name&amp;rdquo;: &amp;ldquo;a&amp;rdquo;, &amp;ldquo;port&amp;rdquo;: 93}, {&amp;ldquo;name&amp;rdquo;: &amp;ldquo;b&amp;rdquo;, &amp;ldquo;port&amp;rdquo;: 76}] }, ]</description>
    </item>
    
    <item>
      <title>event</title>
      <link>http://example.org/core/event/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/event/</guid>
      <description>Event is a report of an event somewhere in the cluster.  </description>
    </item>
    
    <item>
      <title>event</title>
      <link>http://example.org/core/v1/event/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/event/</guid>
      <description>Event is a report of an event somewhere in the cluster.</description>
    </item>
    
    <item>
      <title>limitRange</title>
      <link>http://example.org/core/limitRange/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/limitRange/</guid>
      <description>LimitRange sets resource usage limits for each kind of resource in a Namespace.  </description>
    </item>
    
    <item>
      <title>limitRange</title>
      <link>http://example.org/core/v1/limitRange/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/limitRange/</guid>
      <description>LimitRange sets resource usage limits for each kind of resource in a Namespace.</description>
    </item>
    
    <item>
      <title>namespace</title>
      <link>http://example.org/core/namespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/namespace/</guid>
      <description>Namespace provides a scope for Names.  </description>
    </item>
    
    <item>
      <title>namespace</title>
      <link>http://example.org/core/v1/namespace/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/namespace/</guid>
      <description>Namespace provides a scope for Names. Use of multiple namespaces is optional.</description>
    </item>
    
    <item>
      <title>node</title>
      <link>http://example.org/core/node/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/node/</guid>
      <description>Node is a worker node in Kubernetes.  </description>
    </item>
    
    <item>
      <title>node</title>
      <link>http://example.org/core/v1/node/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/node/</guid>
      <description>Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).</description>
    </item>
    
    <item>
      <title>persistentVolume</title>
      <link>http://example.org/core/persistentVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/persistentVolume/</guid>
      <description>PersistentVolume (PV) is a storage resource provisioned by an administrator.  </description>
    </item>
    
    <item>
      <title>persistentVolume</title>
      <link>http://example.org/core/v1/persistentVolume/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolume/</guid>
      <description>PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes</description>
    </item>
    
    <item>
      <title>persistentVolumeClaim</title>
      <link>http://example.org/core/persistentVolumeClaim/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/persistentVolumeClaim/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>persistentVolumeClaim</title>
      <link>http://example.org/core/v1/persistentVolumeClaim/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/persistentVolumeClaim/</guid>
      <description>PersistentVolumeClaim is a user&amp;rsquo;s request for and claim to a persistent volume</description>
    </item>
    
    <item>
      <title>pod</title>
      <link>http://example.org/core/pod/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/pod/</guid>
      <description>Pod is a collection of containers that can run on a host.  </description>
    </item>
    
    <item>
      <title>pod</title>
      <link>http://example.org/core/v1/pod/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/pod/</guid>
      <description>Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.</description>
    </item>
    
    <item>
      <title>podTemplate</title>
      <link>http://example.org/core/podTemplate/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/podTemplate/</guid>
      <description>PodTemplate describes a template for creating copies of a predefined pod.  </description>
    </item>
    
    <item>
      <title>podTemplate</title>
      <link>http://example.org/core/v1/podTemplate/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/podTemplate/</guid>
      <description>PodTemplate describes a template for creating copies of a predefined pod.</description>
    </item>
    
    <item>
      <title>replicationController</title>
      <link>http://example.org/core/replicationController/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/replicationController/</guid>
      <description>ReplicationController represents the configuration of a replication controller.  </description>
    </item>
    
    <item>
      <title>replicationController</title>
      <link>http://example.org/core/v1/replicationController/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/replicationController/</guid>
      <description>ReplicationController represents the configuration of a replication controller.</description>
    </item>
    
    <item>
      <title>resourceQuota</title>
      <link>http://example.org/core/resourceQuota/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/resourceQuota/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>resourceQuota</title>
      <link>http://example.org/core/v1/resourceQuota/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/resourceQuota/</guid>
      <description>ResourceQuota sets aggregate quota restrictions enforced per namespace</description>
    </item>
    
    <item>
      <title>secret</title>
      <link>http://example.org/core/secret/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/secret/</guid>
      <description>Secret holds secret data of a certain type.  </description>
    </item>
    
    <item>
      <title>secret</title>
      <link>http://example.org/core/v1/secret/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/secret/</guid>
      <description>Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.</description>
    </item>
    
    <item>
      <title>service</title>
      <link>http://example.org/core/service/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/service/</guid>
      <description>Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.  </description>
    </item>
    
    <item>
      <title>service</title>
      <link>http://example.org/core/v1/service/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/service/</guid>
      <description>Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.</description>
    </item>
    
    <item>
      <title>serviceAccount</title>
      <link>http://example.org/core/serviceAccount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/serviceAccount/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>serviceAccount</title>
      <link>http://example.org/core/v1/serviceAccount/</link>
      <pubDate>Mon, 30 Sep 2019 20:18:42 +0000</pubDate>
      
      <guid>http://example.org/core/v1/serviceAccount/</guid>
      <description>ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets</description>
    </item>
    
  </channel>
</rss>